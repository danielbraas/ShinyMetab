{
    "type": [
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2
    ],
    "data": [
        "Unknown or uninitialised column: `Type.1`. \n",
        "> ",
        "  Norv.color = c(\"white\", \"blue\")",
        "> ",
        "  Cell.Number.color= c(\"white\", \"green\")",
        "> ",
        "  names(colors)=unique(samples$Condition)",
        "Error in names(colors) = unique(samples$Condition) : \n  names() applied to a non-vector\n",
        "> ",
        "  ann_colors = list(Condition=colors[1:length(unique(samples$Condition))], Norvaline = Norv.color, Cell.Number = Cell.Number.color)",
        "Error in colors[1:length(unique(samples$Condition))] : \n  object of type 'closure' is not subsettable\n",
        "> ",
        "fresh",
        "[1] 7 8 9\n",
        "> ",
        "View(amounts3)",
        "> ",
        "sapply(amounts2[,3:length(amounts2)], sum, na.rm=T)==0)",
        "Error: unexpected ')' in \"sapply(amounts2[,3:length(amounts2)], sum, na.rm=T)==0)\"\n",
        "> ",
        "sapply(amounts2[,3:length(amounts2)], sum, na.rm=T)==0",
        "  Basal cell_Exp1   Basal cell_Exp2   Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2 \n            FALSE             FALSE             FALSE             FALSE             FALSE \nLuminal cell_Exp3      Control_Exp1      Control_Exp2      Control_Exp3 \n            FALSE             FALSE             FALSE             FALSE \n",
        "> ",
        "sapply(amounts2[,3:length(amounts2)], sum, na.rm=T)",
        "  Basal cell_Exp1   Basal cell_Exp2   Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2 \n         9.187157          7.167274          7.603501          7.475080          7.382994 \nLuminal cell_Exp3      Control_Exp1      Control_Exp2      Control_Exp3 \n         7.987237          8.558879          7.890991          7.778224 \n",
        "> ",
        "colSums(amounts2)",
        "Error in colSums(amounts2) : 'x' must be numeric\n",
        "> ",
        "?mutate",
        "> ",
        "?across",
        "> ",
        "sapply(amounts2, class)",
        "             Name           KEGG.ID   Basal cell_Exp1   Basal cell_Exp2   Basal cell_Exp3 \n      \"character\"       \"character\"         \"numeric\"         \"numeric\"         \"numeric\" \nLuminal cell_Exp1 Luminal cell_Exp2 Luminal cell_Exp3      Control_Exp1      Control_Exp2 \n        \"numeric\"         \"numeric\"         \"numeric\"         \"numeric\"         \"numeric\" \n     Control_Exp3 \n        \"numeric\" \n",
        "> ",
        "mutate(amounts2, across(where(is.numeric), ~colSums))",
        "Error: Problem with `mutate()` input `..1`.\n\u001B[31mx\u001B[39m Input must be a vector, not a function.\n\u001B[34mi\u001B[39m Input `..1` is `across(where(is.numeric), ~colSums)`.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "mutate(amounts2, across(where(is.numeric), ~colSums(.)))",
        "Error: Problem with `mutate()` input `..1`.\n\u001B[31mx\u001B[39m 'x' must be an array of at least two dimensions\n\u001B[34mi\u001B[39m Input `..1` is `across(where(is.numeric), ~colSums(.))`.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "mutate(amounts2, across(where(is.numeric), ~colSums(.x)))",
        "Error: Problem with `mutate()` input `..1`.\n\u001B[31mx\u001B[39m 'x' must be an array of at least two dimensions\n\u001B[34mi\u001B[39m Input `..1` is `across(where(is.numeric), ~colSums(.x))`.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "mutate(amounts2, across(where(is.numeric) ~colSums(.x)))",
        "Error: Problem with `mutate()` input `..1`.\n\u001B[31mx\u001B[39m Formula shorthand must be wrapped in `where()`.\n\n  # Bad\n  data %>% select(where(is.numeric) ~ colSums(.x))\n\n  # Good\n  data %>% select(where(where(is.numeric) ~ colSums(.x)))\n\u001B[34mi\u001B[39m Input `..1` is `across(where(is.numeric) ~ colSums(.x))`.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "mutate_if(amounts2, is.numeric, colSums())",
        "Error in is.data.frame(x) : argument \"x\" is missing, with no default\n",
        "> ",
        "mutate_if(amounts2, is.numeric, colSums(.x))",
        "Error in is.data.frame(x) : object '.x' not found\n",
        "> ",
        "?mutate_if",
        "> ",
        "mutate_if(amounts2, is.numeric, colSums)",
        "Error: Problem with `mutate()` input `Basal cell_Exp1`.\n\u001B[31mx\u001B[39m 'x' must be an array of at least two dimensions\n\u001B[34mi\u001B[39m Input `Basal cell_Exp1` is `(function (x, na.rm = FALSE, dims = 1L) ...`.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "sapply(amounts2, class)",
        "             Name           KEGG.ID   Basal cell_Exp1   Basal cell_Exp2   Basal cell_Exp3 \n      \"character\"       \"character\"         \"numeric\"         \"numeric\"         \"numeric\" \nLuminal cell_Exp1 Luminal cell_Exp2 Luminal cell_Exp3      Control_Exp1      Control_Exp2 \n        \"numeric\"         \"numeric\"         \"numeric\"         \"numeric\"         \"numeric\" \n     Control_Exp3 \n        \"numeric\" \n",
        "> ",
        "mutate(amounts2, across(where(is.numeric) ~colSums))",
        "Error: Problem with `mutate()` input `..1`.\n\u001B[31mx\u001B[39m Formula shorthand must be wrapped in `where()`.\n\n  # Bad\n  data %>% select(where(is.numeric) ~ colSums)\n\n  # Good\n  data %>% select(where(where(is.numeric) ~ colSums))\n\u001B[34mi\u001B[39m Input `..1` is `across(where(is.numeric) ~ colSums)`.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "mutate(amounts2, across(is.numeric), ~colSums))",
        "Error: unexpected ')' in \"mutate(amounts2, across(is.numeric), ~colSums))\"\n",
        "> ",
        "mutate(amounts2, across(is.numeric), ~colSums)",
        "Error: Problem with `mutate()` input `..2`.\n\u001B[31mx\u001B[39m Input `..2` must be a vector, not a `formula` object.\n\u001B[34mi\u001B[39m Input `..2` is `~colSums`.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "In addition: ",
        "Warning messages:\n",
        "1: Problem with `mutate()` input `..1`.\n\u001B[34mi\u001B[39m Predicate functions must be wrapped in `where()`.\n\n  # Bad\n  data %>% select(is.numeric)\n\n  # Good\n  data %>% select(where(is.numeric))\n\n\u001B[34mi\u001B[39m Please update your code.\n\u001B[90mThis message is displayed once per session.\u001B[39m\n\u001B[34mi\u001B[39m Input `..1` is `across(is.numeric)`. \n",
        "2: Predicate functions must be wrapped in `where()`.\n\n  # Bad\n  data %>% select(is.numeric)\n\n  # Good\n  data %>% select(where(is.numeric))\n\n\u001B[34mi\u001B[39m Please update your code.\n\u001B[90mThis message is displayed once per session.\u001B[39m \n",
        "> ",
        "?where",
        "> ",
        "mutate(amounts2, across(where(is.numeric), colSums))",
        "Error: Problem with `mutate()` input `..1`.\n\u001B[31mx\u001B[39m 'x' must be an array of at least two dimensions\n\u001B[34mi\u001B[39m Input `..1` is `across(where(is.numeric), colSums)`.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "mutate(amounts2, across(where(is.numeric), as.character))",
        "      Name KEGG.ID     Basal cell_Exp1     Basal cell_Exp2     Basal cell_Exp3   Luminal cell_Exp1\n1     2-HG  C02630 0.00771795742124383 0.00676063392472278 0.00751009432984228 0.00656866412969492\n2      Ala  C00041  0.0602560931085344  0.0483492563385324  0.0525886706476823  0.0502647605727855\n3      Asn  C00152  0.0260293818691291  0.0228197988460603  0.0243985261811895  0.0242236327864249\n4      Asp  C00049  0.0348031829366204  0.0316556948790853  0.0336129903535925  0.0326653206150093\n5  Choline  C00114",
        "   0.732089491481507   0.652121521792327   0.709783262861461   0.724712309183036\n6      Cys  C00097    0.10350392911122  0.0967637798341254  0.0996913197082786  0.0988149180806828\n7      Glc  C00031    1.50569650930251    1.36871928461734    1.45896767934136     1.4127169805999\n8      Gln  C00064  0.0178175848992394  0.0152947097868577  0.0160047988285887  0.0158962427578903\n9      Glu  C00025  0.0585207882669774  0.0517147010236358  0.0549898422825507   0.054060277664075\n10     Gly  C00037 0.00918435751572461",
        " 0.00699304742505914 0.00787536859991574 0.00779083837954418\n11     Lac  C00186   0.169323666209272   0.150138513001704   0.159935102879447   0.157406196718406\n12 Leu/Ile  C00123    4.26393833386237     3.1965660570565    3.36538707254448    3.30396823373105\n13     Pro  C00148   0.791452006282403   0.560733157643861   0.597630186198206   0.592652275117131\n14  Pro-OH  C01157   0.330578961919339   0.244818192924448   0.263249530169183   0.248436040926836\n15     Ser  C00065 0.00632302560249535 0.00571271583126771",
        " 0.00611295099617021 0.00610253974200905\n16     Thr  C00188  0.0285897372323938  0.0241483077937681  0.0241402906051696  0.0237396572444997\n17     Trp  C00078    0.15436992250619   0.121559325688778   0.127983935564049    0.12858767415561\n18     Val  C00183   0.886962250168312   0.562405574929162   0.593639257011213    0.58647376246224\n     Luminal cell_Exp2   Luminal cell_Exp3        Control_Exp1        Control_Exp2        Control_Exp3\n1  0.00626246536737734 0.00734636429490778 0.00812247934960504 0.00770626478924046",
        "   0.006834791930353\n2    0.047729530887081  0.0512533278983802  0.0555423410016727  0.0514791669250603  0.0491924975917551\n3   0.0260891029421675  0.0251971058930192  0.0263789669029393  0.0255615890930472  0.0256556238826447\n4   0.0402725708184447   0.035342986538793  0.0372181449453706  0.0349840736316903  0.0346837503805759\n5    0.799853917710211   0.746494698303242    0.78360411843066   0.740488057990223   0.726896688287829\n6    0.107987750357015   0.102948680160973   0.111036080694223   0.102286107042706",
        "  0.0991677242011798\n7     1.43569430892533    1.52349610893691    1.61915076288727    1.51965138452067    1.48479087576384\n8   0.0085998918825976  0.0166248325116744   0.017133892043105  0.0161827182539288  0.0159402290601163\n9   0.0644443021429377  0.0584853136760496  0.0615648701942404  0.0579412402455627  0.0565116095390777\n10 0.00219287598542987 0.00747472339771576 0.00822621406687583 0.00746832047050428 0.00761859715823297\n11   0.172073728445998   0.170780339307048   0.179949381949312   0.171091384189282",
        "   0.164500445090763\n12     3.1932920258343    3.55648475104619    3.84801748658081    3.49879832735771    3.39069248928302\n13   0.558059588985286    0.62334170826735   0.686781886228565   0.636516984759549   0.600594632701486\n14   0.247088643026977   0.267939122058732   0.284891710040939   0.270867312376476   0.267573099377698\n15 0.00548629733026554 0.00640653957757361 0.00642767231936914 0.00618135874562695  0.0058362710228216\n16 0.00872280626970846  0.0239331550072868   0.026285321997785  0.0240195493910321",
        "  0.0247455507483332\n17   0.119672852533569   0.138953079323492   0.147451712353336   0.139289081451635   0.131008567374637\n18   0.539470861762524   0.624734647335456    0.65109614299142   0.580477764735414   0.685980218402144\n",
        "> ",
        "mutate(amounts2, across(where(is.numeric), sum, na.rm=T))",
        "      Name KEGG.ID Basal cell_Exp1 Basal cell_Exp2 Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2\n1     2-HG  C02630        9.187157        7.167274        7.603501           7.47508          7.382994\n2      Ala  C00041        9.187157        7.167274        7.603501           7.47508          7.382994\n3      Asn  C00152        9.187157        7.167274        7.603501           7.47508          7.382994\n4      Asp  C00049        9.187157        7.167274        7.603501           7.47508          7.382994",
        "\n5  Choline  C00114        9.187157        7.167274        7.603501           7.47508          7.382994\n6      Cys  C00097        9.187157        7.167274        7.603501           7.47508          7.382994\n7      Glc  C00031        9.187157        7.167274        7.603501           7.47508          7.382994\n8      Gln  C00064        9.187157        7.167274        7.603501           7.47508          7.382994\n9      Glu  C00025        9.187157        7.167274        7.603501           7.47508          7.382994",
        "\n10     Gly  C00037        9.187157        7.167274        7.603501           7.47508          7.382994\n11     Lac  C00186        9.187157        7.167274        7.603501           7.47508          7.382994\n12 Leu/Ile  C00123        9.187157        7.167274        7.603501           7.47508          7.382994\n13     Pro  C00148        9.187157        7.167274        7.603501           7.47508          7.382994\n14  Pro-OH  C01157        9.187157        7.167274        7.603501           7.47508          7.382994",
        "\n15     Ser  C00065        9.187157        7.167274        7.603501           7.47508          7.382994\n16     Thr  C00188        9.187157        7.167274        7.603501           7.47508          7.382994\n17     Trp  C00078        9.187157        7.167274        7.603501           7.47508          7.382994\n18     Val  C00183        9.187157        7.167274        7.603501           7.47508          7.382994\n   Luminal cell_Exp3 Control_Exp1 Control_Exp2 Control_Exp3\n1           7.987237     8.558879     7.890991",
        "     7.778224\n2           7.987237     8.558879     7.890991     7.778224\n3           7.987237     8.558879     7.890991     7.778224\n4           7.987237     8.558879     7.890991     7.778224\n5           7.987237     8.558879     7.890991     7.778224\n6           7.987237     8.558879     7.890991     7.778224\n7           7.987237     8.558879     7.890991     7.778224\n8           7.987237     8.558879     7.890991     7.778224\n9           7.987237     8.558879     7.890991     7.778224\n10          7.987237",
        "     8.558879     7.890991     7.778224\n11          7.987237     8.558879     7.890991     7.778224\n12          7.987237     8.558879     7.890991     7.778224\n13          7.987237     8.558879     7.890991     7.778224\n14          7.987237     8.558879     7.890991     7.778224\n15          7.987237     8.558879     7.890991     7.778224\n16          7.987237     8.558879     7.890991     7.778224\n17          7.987237     8.558879     7.890991     7.778224\n18          7.987237     8.558879     7.890991     7.778224",
        "\n",
        "> ",
        "sapply(amounts2, colSums)",
        "Error in FUN(X[[i]], ...) : \n  'x' must be an array of at least two dimensions\n",
        "> ",
        "A",
        " [1] 0.007554512 0.052071335 0.025865393 0.035628656 0.750329622 0.104163304 1.541197674 0.016418946\n [9] 0.058672573 0.007771044 0.171847070 3.579169434 0.641297835 0.274444041 0.006148434 0.025016807\n[17] 0.139249787 0.639184709\n",
        "> ",
        "head(amounts2)",
        "     Name KEGG.ID Basal cell_Exp1 Basal cell_Exp2 Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2\n1    2-HG  C02630     0.007717957     0.006760634     0.007510094       0.006568664       0.006262465\n2     Ala  C00041     0.060256093     0.048349256     0.052588671       0.050264761       0.047729531\n3     Asn  C00152     0.026029382     0.022819799     0.024398526       0.024223633       0.026089103\n4     Asp  C00049     0.034803183     0.031655695     0.033612990       0.032665321       0.040272571\n5 Choline",
        "  C00114     0.732089491     0.652121522     0.709783263       0.724712309       0.799853918\n6     Cys  C00097     0.103503929     0.096763780     0.099691320       0.098814918       0.107987750\n  Luminal cell_Exp3 Control_Exp1 Control_Exp2 Control_Exp3\n1       0.007346364  0.008122479  0.007706265  0.006834792\n2       0.051253328  0.055542341  0.051479167  0.049192498\n3       0.025197106  0.026378967  0.025561589  0.025655624\n4       0.035342987  0.037218145  0.034984074  0.034683750\n5       0.746494698  0.783604118",
        "  0.740488058  0.726896688\n6       0.102948680  0.111036081  0.102286107  0.099167724\n",
        "> ",
        "View(info)",
        "> ",
        "head(amounts)",
        "  Name KEGG.ID    Condition          Av          Std         CV        Exp1        Exp2        Exp3\n1 2-HG  C02630   Basal cell 0.007329562 0.0005035484 0.06870103 0.007717957 0.006760634 0.007510094\n2 2-HG  C02630 Luminal cell 0.006725831 0.0005587802 0.08307973 0.006568664 0.006262465 0.007346364\n3 2-HG  C02630      Control 0.007554512 0.0006571198 0.08698375 0.008122479 0.007706265 0.006834792\n4  Ala  C00041   Basal cell 0.053731340 0.0060351024 0.11231997 0.060256093 0.048349256 0.052588671\n5  Ala  C00041",
        " Luminal cell 0.049749206 0.0018175900 0.03653505 0.050264761 0.047729531 0.051253328\n6  Ala  C00041      Control 0.052071335 0.0032160730 0.06176283 0.055542341 0.051479167 0.049192498\n      ANOVA Sig\n1 0.2673837    \n2 0.2673837    \n3 0.2673837    \n4 0.5248415    \n5 0.5248415    \n6 0.5248415    \n",
        "> ",
        "amounts %>%",
        "+ ",
        "    select(Name, KEGG.ID, Condition, contains('Exp')) %>%",
        "+ ",
        "    gather(Exp, Amount, -Name, -KEGG.ID, -Condition) %>%",
        "+ ",
        "    arrange(Name, Condition) %>%",
        "+ ",
        "    unite(Condition_Exp, c(Condition,Exp), sep='_')",
        "       Name KEGG.ID     Condition_Exp      Amount\n1      2-HG  C02630   Basal cell_Exp1 0.007717957\n2      2-HG  C02630   Basal cell_Exp2 0.006760634\n3      2-HG  C02630   Basal cell_Exp3 0.007510094\n4      2-HG  C02630 Luminal cell_Exp1 0.006568664\n5      2-HG  C02630 Luminal cell_Exp2 0.006262465\n6      2-HG  C02630 Luminal cell_Exp3 0.007346364\n7      2-HG  C02630      Control_Exp1 0.008122479\n8      2-HG  C02630      Control_Exp2 0.007706265\n9      2-HG  C02630      Control_Exp3 0.006834792\n10      Ala  C00041",
        "   Basal cell_Exp1 0.060256093\n11      Ala  C00041   Basal cell_Exp2 0.048349256\n12      Ala  C00041   Basal cell_Exp3 0.052588671\n13      Ala  C00041 Luminal cell_Exp1 0.050264761\n14      Ala  C00041 Luminal cell_Exp2 0.047729531\n15      Ala  C00041 Luminal cell_Exp3 0.051253328\n16      Ala  C00041      Control_Exp1 0.055542341\n17      Ala  C00041      Control_Exp2 0.051479167\n18      Ala  C00041      Control_Exp3 0.049192498\n19      Asn  C00152   Basal cell_Exp1 0.026029382\n20      Asn  C00152   Basal cell_Exp2",
        " 0.022819799\n21      Asn  C00152   Basal cell_Exp3 0.024398526\n22      Asn  C00152 Luminal cell_Exp1 0.024223633\n23      Asn  C00152 Luminal cell_Exp2 0.026089103\n24      Asn  C00152 Luminal cell_Exp3 0.025197106\n25      Asn  C00152      Control_Exp1 0.026378967\n26      Asn  C00152      Control_Exp2 0.025561589\n27      Asn  C00152      Control_Exp3 0.025655624\n28      Asp  C00049   Basal cell_Exp1 0.034803183\n29      Asp  C00049   Basal cell_Exp2 0.031655695\n30      Asp  C00049   Basal cell_Exp3 0.033612990",
        "\n31      Asp  C00049 Luminal cell_Exp1 0.032665321\n32      Asp  C00049 Luminal cell_Exp2 0.040272571\n33      Asp  C00049 Luminal cell_Exp3 0.035342987\n34      Asp  C00049      Control_Exp1 0.037218145\n35      Asp  C00049      Control_Exp2 0.034984074\n36      Asp  C00049      Control_Exp3 0.034683750\n37  Choline  C00114   Basal cell_Exp1 0.732089491\n38  Choline  C00114   Basal cell_Exp2 0.652121522\n39  Choline  C00114   Basal cell_Exp3 0.709783263\n40  Choline  C00114 Luminal cell_Exp1 0.724712309\n41  Choline",
        "  C00114 Luminal cell_Exp2 0.799853918\n42  Choline  C00114 Luminal cell_Exp3 0.746494698\n43  Choline  C00114      Control_Exp1 0.783604118\n44  Choline  C00114      Control_Exp2 0.740488058\n45  Choline  C00114      Control_Exp3 0.726896688\n46      Cys  C00097   Basal cell_Exp1 0.103503929\n47      Cys  C00097   Basal cell_Exp2 0.096763780\n48      Cys  C00097   Basal cell_Exp3 0.099691320\n49      Cys  C00097 Luminal cell_Exp1 0.098814918\n50      Cys  C00097 Luminal cell_Exp2 0.107987750\n51      Cys  C00097 Luminal cell_Exp3",
        " 0.102948680\n52      Cys  C00097      Control_Exp1 0.111036081\n53      Cys  C00097      Control_Exp2 0.102286107\n54      Cys  C00097      Control_Exp3 0.099167724\n55      Glc  C00031   Basal cell_Exp1 1.505696509\n56      Glc  C00031   Basal cell_Exp2 1.368719285\n57      Glc  C00031   Basal cell_Exp3 1.458967679\n58      Glc  C00031 Luminal cell_Exp1 1.412716981\n59      Glc  C00031 Luminal cell_Exp2 1.435694309\n60      Glc  C00031 Luminal cell_Exp3 1.523496109\n61      Glc  C00031      Control_Exp1 1.619150763",
        "\n62      Glc  C00031      Control_Exp2 1.519651385\n63      Glc  C00031      Control_Exp3 1.484790876\n64      Gln  C00064   Basal cell_Exp1 0.017817585\n65      Gln  C00064   Basal cell_Exp2 0.015294710\n66      Gln  C00064   Basal cell_Exp3 0.016004799\n67      Gln  C00064 Luminal cell_Exp1 0.015896243\n68      Gln  C00064 Luminal cell_Exp2 0.008599892\n69      Gln  C00064 Luminal cell_Exp3 0.016624833\n70      Gln  C00064      Control_Exp1 0.017133892\n71      Gln  C00064      Control_Exp2 0.016182718\n72      Gln",
        "  C00064      Control_Exp3 0.015940229\n73      Glu  C00025   Basal cell_Exp1 0.058520788\n74      Glu  C00025   Basal cell_Exp2 0.051714701\n75      Glu  C00025   Basal cell_Exp3 0.054989842\n76      Glu  C00025 Luminal cell_Exp1 0.054060278\n77      Glu  C00025 Luminal cell_Exp2 0.064444302\n78      Glu  C00025 Luminal cell_Exp3 0.058485314\n79      Glu  C00025      Control_Exp1 0.061564870\n80      Glu  C00025      Control_Exp2 0.057941240\n81      Glu  C00025      Control_Exp3 0.056511610\n82      Gly  C00037   Basal cell_Exp1",
        " 0.009184358\n83      Gly  C00037   Basal cell_Exp2 0.006993047\n84      Gly  C00037   Basal cell_Exp3 0.007875369\n85      Gly  C00037 Luminal cell_Exp1 0.007790838\n86      Gly  C00037 Luminal cell_Exp2 0.002192876\n87      Gly  C00037 Luminal cell_Exp3 0.007474723\n88      Gly  C00037      Control_Exp1 0.008226214\n89      Gly  C00037      Control_Exp2 0.007468320\n90      Gly  C00037      Control_Exp3 0.007618597\n91      Lac  C00186   Basal cell_Exp1 0.169323666\n92      Lac  C00186   Basal cell_Exp2 0.150138513",
        "\n93      Lac  C00186   Basal cell_Exp3 0.159935103\n94      Lac  C00186 Luminal cell_Exp1 0.157406197\n95      Lac  C00186 Luminal cell_Exp2 0.172073728\n96      Lac  C00186 Luminal cell_Exp3 0.170780339\n97      Lac  C00186      Control_Exp1 0.179949382\n98      Lac  C00186      Control_Exp2 0.171091384\n99      Lac  C00186      Control_Exp3 0.164500445\n100 Leu/Ile  C00123   Basal cell_Exp1 4.263938334\n101 Leu/Ile  C00123   Basal cell_Exp2 3.196566057\n102 Leu/Ile  C00123   Basal cell_Exp3 3.365387073\n103 Leu/Ile",
        "  C00123 Luminal cell_Exp1 3.303968234\n104 Leu/Ile  C00123 Luminal cell_Exp2 3.193292026\n105 Leu/Ile  C00123 Luminal cell_Exp3 3.556484751\n106 Leu/Ile  C00123      Control_Exp1 3.848017487\n107 Leu/Ile  C00123      Control_Exp2 3.498798327\n108 Leu/Ile  C00123      Control_Exp3 3.390692489\n109     Pro  C00148   Basal cell_Exp1 0.791452006\n110     Pro  C00148   Basal cell_Exp2 0.560733158\n111     Pro  C00148   Basal cell_Exp3 0.597630186\n112     Pro  C00148 Luminal cell_Exp1 0.592652275\n113     Pro  C00148 Luminal cell_Exp2",
        " 0.558059589\n114     Pro  C00148 Luminal cell_Exp3 0.623341708\n115     Pro  C00148      Control_Exp1 0.686781886\n116     Pro  C00148      Control_Exp2 0.636516985\n117     Pro  C00148      Control_Exp3 0.600594633\n118  Pro-OH  C01157   Basal cell_Exp1 0.330578962\n119  Pro-OH  C01157   Basal cell_Exp2 0.244818193\n120  Pro-OH  C01157   Basal cell_Exp3 0.263249530\n121  Pro-OH  C01157 Luminal cell_Exp1 0.248436041\n122  Pro-OH  C01157 Luminal cell_Exp2 0.247088643\n123  Pro-OH  C01157 Luminal cell_Exp3 0.267939122",
        "\n124  Pro-OH  C01157      Control_Exp1 0.284891710\n125  Pro-OH  C01157      Control_Exp2 0.270867312\n126  Pro-OH  C01157      Control_Exp3 0.267573099\n127     Ser  C00065   Basal cell_Exp1 0.006323026\n128     Ser  C00065   Basal cell_Exp2 0.005712716\n129     Ser  C00065   Basal cell_Exp3 0.006112951\n130     Ser  C00065 Luminal cell_Exp1 0.006102540\n131     Ser  C00065 Luminal cell_Exp2 0.005486297\n132     Ser  C00065 Luminal cell_Exp3 0.006406540\n133     Ser  C00065      Control_Exp1 0.006427672\n134     Ser",
        "  C00065      Control_Exp2 0.006181359\n135     Ser  C00065      Control_Exp3 0.005836271\n136     Thr  C00188   Basal cell_Exp1 0.028589737\n137     Thr  C00188   Basal cell_Exp2 0.024148308\n138     Thr  C00188   Basal cell_Exp3 0.024140291\n139     Thr  C00188 Luminal cell_Exp1 0.023739657\n140     Thr  C00188 Luminal cell_Exp2 0.008722806\n141     Thr  C00188 Luminal cell_Exp3 0.023933155\n142     Thr  C00188      Control_Exp1 0.026285322\n143     Thr  C00188      Control_Exp2 0.024019549\n144     Thr  C00188      Control_Exp3",
        " 0.024745551\n145     Trp  C00078   Basal cell_Exp1 0.154369923\n146     Trp  C00078   Basal cell_Exp2 0.121559326\n147     Trp  C00078   Basal cell_Exp3 0.127983936\n148     Trp  C00078 Luminal cell_Exp1 0.128587674\n149     Trp  C00078 Luminal cell_Exp2 0.119672853\n150     Trp  C00078 Luminal cell_Exp3 0.138953079\n151     Trp  C00078      Control_Exp1 0.147451712\n152     Trp  C00078      Control_Exp2 0.139289081\n153     Trp  C00078      Control_Exp3 0.131008567\n154     Val  C00183   Basal cell_Exp1 0.886962250",
        "\n155     Val  C00183   Basal cell_Exp2 0.562405575\n156     Val  C00183   Basal cell_Exp3 0.593639257\n157     Val  C00183 Luminal cell_Exp1 0.586473762\n158     Val  C00183 Luminal cell_Exp2 0.539470862\n159     Val  C00183 Luminal cell_Exp3 0.624734647\n160     Val  C00183      Control_Exp1 0.651096143\n161     Val  C00183      Control_Exp2 0.580477765\n162     Val  C00183      Control_Exp3 0.685980218\n",
        "> ",
        "amounts %>%",
        "+ ",
        "    select(Name, KEGG.ID, Condition, contains('Exp')) %>%",
        "+ ",
        "    gather(Exp, Amount, -Name, -KEGG.ID, -Condition)",
        "       Name KEGG.ID    Condition  Exp      Amount\n1      2-HG  C02630   Basal cell Exp1 0.007717957\n2      2-HG  C02630 Luminal cell Exp1 0.006568664\n3      2-HG  C02630      Control Exp1 0.008122479\n4       Ala  C00041   Basal cell Exp1 0.060256093\n5       Ala  C00041 Luminal cell Exp1 0.050264761\n6       Ala  C00041      Control Exp1 0.055542341\n7       Asn  C00152   Basal cell Exp1 0.026029382\n8       Asn  C00152 Luminal cell Exp1 0.024223633\n9       Asn  C00152      Control Exp1 0.026378967\n10      Asp  C00049",
        "   Basal cell Exp1 0.034803183\n11      Asp  C00049 Luminal cell Exp1 0.032665321\n12      Asp  C00049      Control Exp1 0.037218145\n13  Choline  C00114   Basal cell Exp1 0.732089491\n14  Choline  C00114 Luminal cell Exp1 0.724712309\n15  Choline  C00114      Control Exp1 0.783604118\n16      Cys  C00097   Basal cell Exp1 0.103503929\n17      Cys  C00097 Luminal cell Exp1 0.098814918\n18      Cys  C00097      Control Exp1 0.111036081\n19      Glc  C00031   Basal cell Exp1 1.505696509\n20      Glc  C00031 Luminal cell",
        " Exp1 1.412716981\n21      Glc  C00031      Control Exp1 1.619150763\n22      Gln  C00064   Basal cell Exp1 0.017817585\n23      Gln  C00064 Luminal cell Exp1 0.015896243\n24      Gln  C00064      Control Exp1 0.017133892\n25      Glu  C00025   Basal cell Exp1 0.058520788\n26      Glu  C00025 Luminal cell Exp1 0.054060278\n27      Glu  C00025      Control Exp1 0.061564870\n28      Gly  C00037   Basal cell Exp1 0.009184358\n29      Gly  C00037 Luminal cell Exp1 0.007790838\n30      Gly  C00037      Control Exp1 0.008226214",
        "\n31      Lac  C00186   Basal cell Exp1 0.169323666\n32      Lac  C00186 Luminal cell Exp1 0.157406197\n33      Lac  C00186      Control Exp1 0.179949382\n34  Leu/Ile  C00123   Basal cell Exp1 4.263938334\n35  Leu/Ile  C00123 Luminal cell Exp1 3.303968234\n36  Leu/Ile  C00123      Control Exp1 3.848017487\n37      Pro  C00148   Basal cell Exp1 0.791452006\n38      Pro  C00148 Luminal cell Exp1 0.592652275\n39      Pro  C00148      Control Exp1 0.686781886\n40   Pro-OH  C01157   Basal cell Exp1 0.330578962\n41   Pro-OH",
        "  C01157 Luminal cell Exp1 0.248436041\n42   Pro-OH  C01157      Control Exp1 0.284891710\n43      Ser  C00065   Basal cell Exp1 0.006323026\n44      Ser  C00065 Luminal cell Exp1 0.006102540\n45      Ser  C00065      Control Exp1 0.006427672\n46      Thr  C00188   Basal cell Exp1 0.028589737\n47      Thr  C00188 Luminal cell Exp1 0.023739657\n48      Thr  C00188      Control Exp1 0.026285322\n49      Trp  C00078   Basal cell Exp1 0.154369923\n50      Trp  C00078 Luminal cell Exp1 0.128587674\n51      Trp  C00078      Control",
        " Exp1 0.147451712\n52      Val  C00183   Basal cell Exp1 0.886962250\n53      Val  C00183 Luminal cell Exp1 0.586473762\n54      Val  C00183      Control Exp1 0.651096143\n55     2-HG  C02630   Basal cell Exp2 0.006760634\n56     2-HG  C02630 Luminal cell Exp2 0.006262465\n57     2-HG  C02630      Control Exp2 0.007706265\n58      Ala  C00041   Basal cell Exp2 0.048349256\n59      Ala  C00041 Luminal cell Exp2 0.047729531\n60      Ala  C00041      Control Exp2 0.051479167\n61      Asn  C00152   Basal cell Exp2 0.022819799",
        "\n62      Asn  C00152 Luminal cell Exp2 0.026089103\n63      Asn  C00152      Control Exp2 0.025561589\n64      Asp  C00049   Basal cell Exp2 0.031655695\n65      Asp  C00049 Luminal cell Exp2 0.040272571\n66      Asp  C00049      Control Exp2 0.034984074\n67  Choline  C00114   Basal cell Exp2 0.652121522\n68  Choline  C00114 Luminal cell Exp2 0.799853918\n69  Choline  C00114      Control Exp2 0.740488058\n70      Cys  C00097   Basal cell Exp2 0.096763780\n71      Cys  C00097 Luminal cell Exp2 0.107987750\n72      Cys",
        "  C00097      Control Exp2 0.102286107\n73      Glc  C00031   Basal cell Exp2 1.368719285\n74      Glc  C00031 Luminal cell Exp2 1.435694309\n75      Glc  C00031      Control Exp2 1.519651385\n76      Gln  C00064   Basal cell Exp2 0.015294710\n77      Gln  C00064 Luminal cell Exp2 0.008599892\n78      Gln  C00064      Control Exp2 0.016182718\n79      Glu  C00025   Basal cell Exp2 0.051714701\n80      Glu  C00025 Luminal cell Exp2 0.064444302\n81      Glu  C00025      Control Exp2 0.057941240\n82      Gly  C00037   Basal cell",
        " Exp2 0.006993047\n83      Gly  C00037 Luminal cell Exp2 0.002192876\n84      Gly  C00037      Control Exp2 0.007468320\n85      Lac  C00186   Basal cell Exp2 0.150138513\n86      Lac  C00186 Luminal cell Exp2 0.172073728\n87      Lac  C00186      Control Exp2 0.171091384\n88  Leu/Ile  C00123   Basal cell Exp2 3.196566057\n89  Leu/Ile  C00123 Luminal cell Exp2 3.193292026\n90  Leu/Ile  C00123      Control Exp2 3.498798327\n91      Pro  C00148   Basal cell Exp2 0.560733158\n92      Pro  C00148 Luminal cell Exp2 0.558059589",
        "\n93      Pro  C00148      Control Exp2 0.636516985\n94   Pro-OH  C01157   Basal cell Exp2 0.244818193\n95   Pro-OH  C01157 Luminal cell Exp2 0.247088643\n96   Pro-OH  C01157      Control Exp2 0.270867312\n97      Ser  C00065   Basal cell Exp2 0.005712716\n98      Ser  C00065 Luminal cell Exp2 0.005486297\n99      Ser  C00065      Control Exp2 0.006181359\n100     Thr  C00188   Basal cell Exp2 0.024148308\n101     Thr  C00188 Luminal cell Exp2 0.008722806\n102     Thr  C00188      Control Exp2 0.024019549\n103     Trp",
        "  C00078   Basal cell Exp2 0.121559326\n104     Trp  C00078 Luminal cell Exp2 0.119672853\n105     Trp  C00078      Control Exp2 0.139289081\n106     Val  C00183   Basal cell Exp2 0.562405575\n107     Val  C00183 Luminal cell Exp2 0.539470862\n108     Val  C00183      Control Exp2 0.580477765\n109    2-HG  C02630   Basal cell Exp3 0.007510094\n110    2-HG  C02630 Luminal cell Exp3 0.007346364\n111    2-HG  C02630      Control Exp3 0.006834792\n112     Ala  C00041   Basal cell Exp3 0.052588671\n113     Ala  C00041 Luminal cell",
        " Exp3 0.051253328\n114     Ala  C00041      Control Exp3 0.049192498\n115     Asn  C00152   Basal cell Exp3 0.024398526\n116     Asn  C00152 Luminal cell Exp3 0.025197106\n117     Asn  C00152      Control Exp3 0.025655624\n118     Asp  C00049   Basal cell Exp3 0.033612990\n119     Asp  C00049 Luminal cell Exp3 0.035342987\n120     Asp  C00049      Control Exp3 0.034683750\n121 Choline  C00114   Basal cell Exp3 0.709783263\n122 Choline  C00114 Luminal cell Exp3 0.746494698\n123 Choline  C00114      Control Exp3 0.726896688",
        "\n124     Cys  C00097   Basal cell Exp3 0.099691320\n125     Cys  C00097 Luminal cell Exp3 0.102948680\n126     Cys  C00097      Control Exp3 0.099167724\n127     Glc  C00031   Basal cell Exp3 1.458967679\n128     Glc  C00031 Luminal cell Exp3 1.523496109\n129     Glc  C00031      Control Exp3 1.484790876\n130     Gln  C00064   Basal cell Exp3 0.016004799\n131     Gln  C00064 Luminal cell Exp3 0.016624833\n132     Gln  C00064      Control Exp3 0.015940229\n133     Glu  C00025   Basal cell Exp3 0.054989842\n134     Glu",
        "  C00025 Luminal cell Exp3 0.058485314\n135     Glu  C00025      Control Exp3 0.056511610\n136     Gly  C00037   Basal cell Exp3 0.007875369\n137     Gly  C00037 Luminal cell Exp3 0.007474723\n138     Gly  C00037      Control Exp3 0.007618597\n139     Lac  C00186   Basal cell Exp3 0.159935103\n140     Lac  C00186 Luminal cell Exp3 0.170780339\n141     Lac  C00186      Control Exp3 0.164500445\n142 Leu/Ile  C00123   Basal cell Exp3 3.365387073\n143 Leu/Ile  C00123 Luminal cell Exp3 3.556484751\n144 Leu/Ile  C00123      Control",
        " Exp3 3.390692489\n145     Pro  C00148   Basal cell Exp3 0.597630186\n146     Pro  C00148 Luminal cell Exp3 0.623341708\n147     Pro  C00148      Control Exp3 0.600594633\n148  Pro-OH  C01157   Basal cell Exp3 0.263249530\n149  Pro-OH  C01157 Luminal cell Exp3 0.267939122\n150  Pro-OH  C01157      Control Exp3 0.267573099\n151     Ser  C00065   Basal cell Exp3 0.006112951\n152     Ser  C00065 Luminal cell Exp3 0.006406540\n153     Ser  C00065      Control Exp3 0.005836271\n154     Thr  C00188   Basal cell Exp3 0.024140291",
        "\n155     Thr  C00188 Luminal cell Exp3 0.023933155\n156     Thr  C00188      Control Exp3 0.024745551\n157     Trp  C00078   Basal cell Exp3 0.127983936\n158     Trp  C00078 Luminal cell Exp3 0.138953079\n159     Trp  C00078      Control Exp3 0.131008567\n160     Val  C00183   Basal cell Exp3 0.593639257\n161     Val  C00183 Luminal cell Exp3 0.624734647\n162     Val  C00183      Control Exp3 0.685980218\n",
        "> ",
        "head(amounts2)",
        "     Name KEGG.ID Basal cell_Exp1 Basal cell_Exp2 Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2\n1    2-HG  C02630     0.007717957     0.006760634     0.007510094       0.006568664       0.006262465\n2     Ala  C00041     0.060256093     0.048349256     0.052588671       0.050264761       0.047729531\n3     Asn  C00152     0.026029382     0.022819799     0.024398526       0.024223633       0.026089103\n4     Asp  C00049     0.034803183     0.031655695     0.033612990       0.032665321       0.040272571\n5 Choline",
        "  C00114     0.732089491     0.652121522     0.709783263       0.724712309       0.799853918\n6     Cys  C00097     0.103503929     0.096763780     0.099691320       0.098814918       0.107987750\n  Luminal cell_Exp3 Control_Exp1 Control_Exp2 Control_Exp3\n1       0.007346364  0.008122479  0.007706265  0.006834792\n2       0.051253328  0.055542341  0.051479167  0.049192498\n3       0.025197106  0.026378967  0.025561589  0.025655624\n4       0.035342987  0.037218145  0.034984074  0.034683750\n5       0.746494698  0.783604118",
        "  0.740488058  0.726896688\n6       0.102948680  0.111036081  0.102286107  0.099167724\n",
        "> ",
        "head(amounts3)",
        "     Name KEGG.ID Basal cell_Exp1 Basal cell_Exp2 Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2\n1    2-HG  C02630    0.0001634454   -0.0007938781   -4.441769e-05     -0.0009858479     -0.0012920467\n2     Ala  C00041    0.0081847579   -0.0037220788    5.173355e-04     -0.0018065746     -0.0043418043\n3     Asn  C00152    0.0001639886   -0.0030455944   -1.466867e-03     -0.0016417605      0.0002237096\n4     Asp  C00049   -0.0008254734   -0.0039729614   -2.015666e-03     -0.0029633357      0.0046439145\n5 Choline",
        "  C00114   -0.0182401301   -0.0982080998   -4.054636e-02     -0.0256173124      0.0495242961\n6     Cys  C00097   -0.0006593749   -0.0073995241   -4.471984e-03     -0.0053483859      0.0038244464\n  Luminal cell_Exp3\n1     -0.0002081477\n2     -0.0008180073\n3     -0.0006682874\n4     -0.0002856698\n5     -0.0038349233\n6     -0.0012146238\n",
        "> ",
        "B",
        "Error: object 'B' not found\n",
        "> ",
        "i=1",
        "> ",
        "c(i*3-2, i*3-1, i*3)",
        "[1] 1 2 3\n",
        "> ",
        "seq_len(length(unique(info$Medium)))",
        "[1] 1\n",
        "> ",
        "amounts %>%",
        "+ ",
        "    select(Name, KEGG.ID, Condition, contains('Exp')) %>%",
        "+ ",
        "    gather(Exp, Amount, -Name, -KEGG.ID, -Condition)",
        "       Name KEGG.ID    Condition  Exp      Amount\n1      2-HG  C02630   Basal cell Exp1 0.007717957\n2      2-HG  C02630 Luminal cell Exp1 0.006568664\n3      2-HG  C02630      Control Exp1 0.008122479\n4       Ala  C00041   Basal cell Exp1 0.060256093\n5       Ala  C00041 Luminal cell Exp1 0.050264761\n6       Ala  C00041      Control Exp1 0.055542341\n7       Asn  C00152   Basal cell Exp1 0.026029382\n8       Asn  C00152 Luminal cell Exp1 0.024223633\n9       Asn  C00152      Control Exp1 0.026378967\n10      Asp  C00049",
        "   Basal cell Exp1 0.034803183\n11      Asp  C00049 Luminal cell Exp1 0.032665321\n12      Asp  C00049      Control Exp1 0.037218145\n13  Choline  C00114   Basal cell Exp1 0.732089491\n14  Choline  C00114 Luminal cell Exp1 0.724712309\n15  Choline  C00114      Control Exp1 0.783604118\n16      Cys  C00097   Basal cell Exp1 0.103503929\n17      Cys  C00097 Luminal cell Exp1 0.098814918\n18      Cys  C00097      Control Exp1 0.111036081\n19      Glc  C00031   Basal cell Exp1 1.505696509\n20      Glc  C00031 Luminal cell",
        " Exp1 1.412716981\n21      Glc  C00031      Control Exp1 1.619150763\n22      Gln  C00064   Basal cell Exp1 0.017817585\n23      Gln  C00064 Luminal cell Exp1 0.015896243\n24      Gln  C00064      Control Exp1 0.017133892\n25      Glu  C00025   Basal cell Exp1 0.058520788\n26      Glu  C00025 Luminal cell Exp1 0.054060278\n27      Glu  C00025      Control Exp1 0.061564870\n28      Gly  C00037   Basal cell Exp1 0.009184358\n29      Gly  C00037 Luminal cell Exp1 0.007790838\n30      Gly  C00037      Control Exp1 0.008226214",
        "\n31      Lac  C00186   Basal cell Exp1 0.169323666\n32      Lac  C00186 Luminal cell Exp1 0.157406197\n33      Lac  C00186      Control Exp1 0.179949382\n34  Leu/Ile  C00123   Basal cell Exp1 4.263938334\n35  Leu/Ile  C00123 Luminal cell Exp1 3.303968234\n36  Leu/Ile  C00123      Control Exp1 3.848017487\n37      Pro  C00148   Basal cell Exp1 0.791452006\n38      Pro  C00148 Luminal cell Exp1 0.592652275\n39      Pro  C00148      Control Exp1 0.686781886\n40   Pro-OH  C01157   Basal cell Exp1 0.330578962\n41   Pro-OH",
        "  C01157 Luminal cell Exp1 0.248436041\n42   Pro-OH  C01157      Control Exp1 0.284891710\n43      Ser  C00065   Basal cell Exp1 0.006323026\n44      Ser  C00065 Luminal cell Exp1 0.006102540\n45      Ser  C00065      Control Exp1 0.006427672\n46      Thr  C00188   Basal cell Exp1 0.028589737\n47      Thr  C00188 Luminal cell Exp1 0.023739657\n48      Thr  C00188      Control Exp1 0.026285322\n49      Trp  C00078   Basal cell Exp1 0.154369923\n50      Trp  C00078 Luminal cell Exp1 0.128587674\n51      Trp  C00078      Control",
        " Exp1 0.147451712\n52      Val  C00183   Basal cell Exp1 0.886962250\n53      Val  C00183 Luminal cell Exp1 0.586473762\n54      Val  C00183      Control Exp1 0.651096143\n55     2-HG  C02630   Basal cell Exp2 0.006760634\n56     2-HG  C02630 Luminal cell Exp2 0.006262465\n57     2-HG  C02630      Control Exp2 0.007706265\n58      Ala  C00041   Basal cell Exp2 0.048349256\n59      Ala  C00041 Luminal cell Exp2 0.047729531\n60      Ala  C00041      Control Exp2 0.051479167\n61      Asn  C00152   Basal cell Exp2 0.022819799",
        "\n62      Asn  C00152 Luminal cell Exp2 0.026089103\n63      Asn  C00152      Control Exp2 0.025561589\n64      Asp  C00049   Basal cell Exp2 0.031655695\n65      Asp  C00049 Luminal cell Exp2 0.040272571\n66      Asp  C00049      Control Exp2 0.034984074\n67  Choline  C00114   Basal cell Exp2 0.652121522\n68  Choline  C00114 Luminal cell Exp2 0.799853918\n69  Choline  C00114      Control Exp2 0.740488058\n70      Cys  C00097   Basal cell Exp2 0.096763780\n71      Cys  C00097 Luminal cell Exp2 0.107987750\n72      Cys",
        "  C00097      Control Exp2 0.102286107\n73      Glc  C00031   Basal cell Exp2 1.368719285\n74      Glc  C00031 Luminal cell Exp2 1.435694309\n75      Glc  C00031      Control Exp2 1.519651385\n76      Gln  C00064   Basal cell Exp2 0.015294710\n77      Gln  C00064 Luminal cell Exp2 0.008599892\n78      Gln  C00064      Control Exp2 0.016182718\n79      Glu  C00025   Basal cell Exp2 0.051714701\n80      Glu  C00025 Luminal cell Exp2 0.064444302\n81      Glu  C00025      Control Exp2 0.057941240\n82      Gly  C00037   Basal cell",
        " Exp2 0.006993047\n83      Gly  C00037 Luminal cell Exp2 0.002192876\n84      Gly  C00037      Control Exp2 0.007468320\n85      Lac  C00186   Basal cell Exp2 0.150138513\n86      Lac  C00186 Luminal cell Exp2 0.172073728\n87      Lac  C00186      Control Exp2 0.171091384\n88  Leu/Ile  C00123   Basal cell Exp2 3.196566057\n89  Leu/Ile  C00123 Luminal cell Exp2 3.193292026\n90  Leu/Ile  C00123      Control Exp2 3.498798327\n91      Pro  C00148   Basal cell Exp2 0.560733158\n92      Pro  C00148 Luminal cell Exp2 0.558059589",
        "\n93      Pro  C00148      Control Exp2 0.636516985\n94   Pro-OH  C01157   Basal cell Exp2 0.244818193\n95   Pro-OH  C01157 Luminal cell Exp2 0.247088643\n96   Pro-OH  C01157      Control Exp2 0.270867312\n97      Ser  C00065   Basal cell Exp2 0.005712716\n98      Ser  C00065 Luminal cell Exp2 0.005486297\n99      Ser  C00065      Control Exp2 0.006181359\n100     Thr  C00188   Basal cell Exp2 0.024148308\n101     Thr  C00188 Luminal cell Exp2 0.008722806\n102     Thr  C00188      Control Exp2 0.024019549\n103     Trp",
        "  C00078   Basal cell Exp2 0.121559326\n104     Trp  C00078 Luminal cell Exp2 0.119672853\n105     Trp  C00078      Control Exp2 0.139289081\n106     Val  C00183   Basal cell Exp2 0.562405575\n107     Val  C00183 Luminal cell Exp2 0.539470862\n108     Val  C00183      Control Exp2 0.580477765\n109    2-HG  C02630   Basal cell Exp3 0.007510094\n110    2-HG  C02630 Luminal cell Exp3 0.007346364\n111    2-HG  C02630      Control Exp3 0.006834792\n112     Ala  C00041   Basal cell Exp3 0.052588671\n113     Ala  C00041 Luminal cell",
        " Exp3 0.051253328\n114     Ala  C00041      Control Exp3 0.049192498\n115     Asn  C00152   Basal cell Exp3 0.024398526\n116     Asn  C00152 Luminal cell Exp3 0.025197106\n117     Asn  C00152      Control Exp3 0.025655624\n118     Asp  C00049   Basal cell Exp3 0.033612990\n119     Asp  C00049 Luminal cell Exp3 0.035342987\n120     Asp  C00049      Control Exp3 0.034683750\n121 Choline  C00114   Basal cell Exp3 0.709783263\n122 Choline  C00114 Luminal cell Exp3 0.746494698\n123 Choline  C00114      Control Exp3 0.726896688",
        "\n124     Cys  C00097   Basal cell Exp3 0.099691320\n125     Cys  C00097 Luminal cell Exp3 0.102948680\n126     Cys  C00097      Control Exp3 0.099167724\n127     Glc  C00031   Basal cell Exp3 1.458967679\n128     Glc  C00031 Luminal cell Exp3 1.523496109\n129     Glc  C00031      Control Exp3 1.484790876\n130     Gln  C00064   Basal cell Exp3 0.016004799\n131     Gln  C00064 Luminal cell Exp3 0.016624833\n132     Gln  C00064      Control Exp3 0.015940229\n133     Glu  C00025   Basal cell Exp3 0.054989842\n134     Glu",
        "  C00025 Luminal cell Exp3 0.058485314\n135     Glu  C00025      Control Exp3 0.056511610\n136     Gly  C00037   Basal cell Exp3 0.007875369\n137     Gly  C00037 Luminal cell Exp3 0.007474723\n138     Gly  C00037      Control Exp3 0.007618597\n139     Lac  C00186   Basal cell Exp3 0.159935103\n140     Lac  C00186 Luminal cell Exp3 0.170780339\n141     Lac  C00186      Control Exp3 0.164500445\n142 Leu/Ile  C00123   Basal cell Exp3 3.365387073\n143 Leu/Ile  C00123 Luminal cell Exp3 3.556484751\n144 Leu/Ile  C00123      Control",
        " Exp3 3.390692489\n145     Pro  C00148   Basal cell Exp3 0.597630186\n146     Pro  C00148 Luminal cell Exp3 0.623341708\n147     Pro  C00148      Control Exp3 0.600594633\n148  Pro-OH  C01157   Basal cell Exp3 0.263249530\n149  Pro-OH  C01157 Luminal cell Exp3 0.267939122\n150  Pro-OH  C01157      Control Exp3 0.267573099\n151     Ser  C00065   Basal cell Exp3 0.006112951\n152     Ser  C00065 Luminal cell Exp3 0.006406540\n153     Ser  C00065      Control Exp3 0.005836271\n154     Thr  C00188   Basal cell Exp3 0.024140291",
        "\n155     Thr  C00188 Luminal cell Exp3 0.023933155\n156     Thr  C00188      Control Exp3 0.024745551\n157     Trp  C00078   Basal cell Exp3 0.127983936\n158     Trp  C00078 Luminal cell Exp3 0.138953079\n159     Trp  C00078      Control Exp3 0.131008567\n160     Val  C00183   Basal cell Exp3 0.593639257\n161     Val  C00183 Luminal cell Exp3 0.624734647\n162     Val  C00183      Control Exp3 0.685980218\n",
        "> ",
        "head(amounts2)",
        "     Name KEGG.ID Basal cell_Exp1 Basal cell_Exp2 Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2\n1    2-HG  C02630     0.007717957     0.006760634     0.007510094       0.006568664       0.006262465\n2     Ala  C00041     0.060256093     0.048349256     0.052588671       0.050264761       0.047729531\n3     Asn  C00152     0.026029382     0.022819799     0.024398526       0.024223633       0.026089103\n4     Asp  C00049     0.034803183     0.031655695     0.033612990       0.032665321       0.040272571\n5 Choline",
        "  C00114     0.732089491     0.652121522     0.709783263       0.724712309       0.799853918\n6     Cys  C00097     0.103503929     0.096763780     0.099691320       0.098814918       0.107987750\n  Luminal cell_Exp3 Control_Exp1 Control_Exp2 Control_Exp3\n1       0.007346364  0.008122479  0.007706265  0.006834792\n2       0.051253328  0.055542341  0.051479167  0.049192498\n3       0.025197106  0.026378967  0.025561589  0.025655624\n4       0.035342987  0.037218145  0.034984074  0.034683750\n5       0.746494698  0.783604118",
        "  0.740488058  0.726896688\n6       0.102948680  0.111036081  0.102286107  0.099167724\n",
        "> ",
        "head(amounts)",
        "  Name KEGG.ID    Condition          Av          Std         CV        Exp1        Exp2        Exp3\n1 2-HG  C02630   Basal cell 0.007329562 0.0005035484 0.06870103 0.007717957 0.006760634 0.007510094\n2 2-HG  C02630 Luminal cell 0.006725831 0.0005587802 0.08307973 0.006568664 0.006262465 0.007346364\n3 2-HG  C02630      Control 0.007554512 0.0006571198 0.08698375 0.008122479 0.007706265 0.006834792\n4  Ala  C00041   Basal cell 0.053731340 0.0060351024 0.11231997 0.060256093 0.048349256 0.052588671\n5  Ala  C00041",
        " Luminal cell 0.049749206 0.0018175900 0.03653505 0.050264761 0.047729531 0.051253328\n6  Ala  C00041      Control 0.052071335 0.0032160730 0.06176283 0.055542341 0.051479167 0.049192498\n      ANOVA Sig\n1 0.2673837    \n2 0.2673837    \n3 0.2673837    \n4 0.5248415    \n5 0.5248415    \n6 0.5248415    \n",
        "> ",
        "  amounts3[,3:length(amounts3)][amounts3[,3:length(amounts3)]==0] <- NA",
        "> ",
        "  amounts3 <- amounts3 %>%",
        "+ ",
        "    gather(Condition_Exp, Amount, -Name, -KEGG.ID) %>%",
        "+ ",
        "    separate(Condition_Exp, c('Condition', 'Exp'), sep='_') %>%",
        "+ ",
        "    mutate(Condition=factor(Condition, levels=unique(.$Condition))) %>%",
        "+ ",
        "    group_by(Name, Condition) %>%",
        "+ ",
        "    mutate(Av=mean(Amount),",
        "+ ",
        "           Std=sd(Amount),",
        "+ ",
        "           CV=Std/Av) %>%",
        "+ ",
        "    ungroup()",
        "> ",
        "  amounts3$Amount <- mapvalues(amounts3$Amount, NA, 0)",
        "Error in mapvalues(amounts3$Amount, NA, 0) : \n  could not find function \"mapvalues\"\n",
        "> ",
        "  amounts3$Amount <- plyr::mapvalues(amounts3$Amount, NA, 0)",
        "The following `from` values were not present in `x`: NA\n",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `ANOVA`. \n",
        "2: Unknown or uninitialised column: `Sig`. \n",
        "3: Unknown or uninitialised column: `ANOVA`. \n",
        "4: Unknown or uninitialised column: `Sig`. \n",
        "5: Unknown or uninitialised column: `ANOVA`. \n",
        "6: Unknown or uninitialised column: `Sig`. \n",
        "7: Unknown or uninitialised column: `ANOVA`. \n",
        "8: Unknown or uninitialised column: `Sig`. \n",
        "9: Unknown or uninitialised column: `Sig`. \n",
        "> ",
        "  data8=split(amounts3, amounts3[,1])",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `ANOVA`. \n",
        "2: Unknown or uninitialised column: `Sig`. \n",
        "3: Unknown or uninitialised column: `ANOVA`. \n",
        "4: Unknown or uninitialised column: `Sig`. \n",
        "5: Unknown or uninitialised column: `ANOVA`. \n",
        "6: Unknown or uninitialised column: `Sig`. \n",
        "7: Unknown or uninitialised column: `ANOVA`. \n",
        "8: Unknown or uninitialised column: `Sig`. \n",
        "9: Unknown or uninitialised column: `Sig`. \n",
        "> ",
        "  ANOVA=suppressWarnings(sapply(data8, function(x) anova(aov(x$Amount~x$Condition))$Pr[1]))",
        "> ",
        "  ANOVA=rep(ANOVA,1,each=length(unique(amounts3$Condition)))",
        "> ",
        "  amounts3 <- amounts3 %>%",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `ANOVA`. \n",
        "2: Unknown or uninitialised column: `Sig`. \n",
        "3: Unknown or uninitialised column: `ANOVA`. \n",
        "4: Unknown or uninitialised column: `Sig`. \n",
        "5: Unknown or uninitialised column: `ANOVA`. \n",
        "6: Unknown or uninitialised column: `Sig`. \n",
        "7: Unknown or uninitialised column: `ANOVA`. \n",
        "8: Unknown or uninitialised column: `Sig`. \n",
        "9: Unknown or uninitialised column: `Sig`. \n",
        "+ ",
        "    spread(Exp, Amount) %>%",
        "+ ",
        "    arrange(Name) %>%",
        "+ ",
        "    mutate(ANOVA = ANOVA,",
        "+ ",
        "           Sig = '')",
        "> ",
        "  for (i in 1:nrow(amounts3)){",
        "+ ",
        "    if (amounts3$ANOVA[i] == \"NaN\") amounts3$Sig[i]=\"\"",
        "+ ",
        "    else if (amounts3$ANOVA[i] <= 0.001) amounts3$Sig[i]=\"***\"",
        "+ ",
        "    else if (amounts3$ANOVA[i] <= 0.01) amounts3$Sig[i]=\"**\"",
        "+ ",
        "    else if (amounts3$ANOVA[i] <= 0.05) amounts3$Sig[i]=\"*\"",
        "+ ",
        "    else amounts3$Sig[i]=\"\"",
        "+ ",
        "  }",
        "> ",
        "head(amounts3)",
        "\u001B[38;5;246m# A tibble: 6 x 11\u001B[39m\n  Name  KEGG.ID Condition           Av      Std     CV      Exp1      Exp2       Exp3 ANOVA Sig  \n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m      \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m 2-HG  C02630  Basal cell   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m2\u001B[24m\u001B[4m2\u001B[24m\u001B[4m5\u001B[24m\u001B[39m 0.000\u001B[4m5\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m -\u001B[31m2\u001B[39m\u001B[31m.\u001B[39m\u001B[31m24\u001B[39m   0.000\u001B[4m1\u001B[24m\u001B[4m6\u001B[24m\u001B[4m3\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m7\u001B[24m\u001B[4m9\u001B[24m\u001B[4m4\u001B[24m\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[4m0\u001B[24m\u001B[39m\u001B[31m\u001B[4m4\u001B[24m\u001B[4m4\u001B[24m4\u001B[39m 0.237 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m2\u001B[39m 2-HG  C02630  Luminal cell -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m8\u001B[24m\u001B[4m2\u001B[24m\u001B[4m9\u001B[24m\u001B[39m 0.000\u001B[4m5\u001B[24m\u001B[4m5\u001B[24m\u001B[4m9\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m674\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m9\u001B[24m\u001B[4m8\u001B[24m\u001B[4m6\u001B[24m\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m2\u001B[24m\u001B[4m9\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m2\u001B[24m\u001B[4m0\u001B[24m\u001B[4m8\u001B[24m\u001B[39m  0.237 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m3\u001B[39m Ala   C00041  Basal cell    0.001\u001B[4m6\u001B[24m\u001B[4m6\u001B[24m  0.006\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m   3.64   0.008\u001B[4m1\u001B[24m\u001B[4m8\u001B[24m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m3\u001B[4m7\u001B[24m\u001B[4m2\u001B[24m\u001B[39m   0.000\u001B[4m5\u001B[24m\u001B[4m1\u001B[24m\u001B[4m7\u001B[24m  0.335 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m4\u001B[39m Ala   C00041  Luminal cell -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m2\u001B[4m3\u001B[24m\u001B[4m2\u001B[24m\u001B[39m  0.001\u001B[4m8\u001B[24m\u001B[4m2\u001B[24m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m783\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m8\u001B[24m\u001B[4m1\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m4\u001B[4m3\u001B[24m\u001B[4m4\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m8\u001B[24m\u001B[4m1\u001B[24m\u001B[4m8\u001B[24m\u001B[39m  0.335 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m5\u001B[39m Asn   C00152  Basal cell   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m4\u001B[24m\u001B[4m5\u001B[24m\u001B[39m  0.001\u001B[4m6\u001B[24m\u001B[4m0\u001B[24m  -\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m\u001B[31m11\u001B[39m   0.000\u001B[4m1\u001B[24m\u001B[4m6\u001B[24m\u001B[4m4\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m3\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m4\u001B[24m\u001B[4m7\u001B[24m\u001B[39m   0.521 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m6\u001B[39m Asn   C00152  Luminal cell -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m6\u001B[24m\u001B[4m9\u001B[24m\u001B[4m5\u001B[24m\u001B[39m 0.000\u001B[4m9\u001B[24m\u001B[4m3\u001B[24m\u001B[4m3\u001B[24m -\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m\u001B[31m34\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m6\u001B[24m\u001B[4m4\u001B[24m\u001B[39m   0.000\u001B[4m2\u001B[24m\u001B[4m2\u001B[24m\u001B[4m4\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m6\u001B[24m\u001B[4m6\u001B[24m\u001B[4m8\u001B[24m\u001B[39m  0.521 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   ",
        "\n",
        "> ",
        "setwd(\"C:/Users/Daniel/Dropbox/R_projects/extract_test\")",
        "> ",
        "setwd(\"C:/Users/Daniel/Dropbox/R_projects/medium_test\")",
        "> ",
        "make_matrix <- function(MS_data, Title = '', Type, anova = 0.05, folder = getwd()){",
        "+ ",
        "",
        "+ ",
        "  # Find out what kind of input matrix is, ie relative amounts, MIDs etc",
        "+ ",
        "  type <- names(MS_data)[str_detect(names(MS_data), 'Exp|MID|FC|Labeled')] %>%",
        "+ ",
        "    str_remove('( )?[0-9]+$') %>%",
        "+ ",
        "    unique()",
        "+ ",
        "",
        "+ ",
        "  switch(type,",
        "+ ",
        "         Exp = ext <- 'Relative Amounts',",
        "+ ",
        "         MID = ext <- 'MIDs',",
        "+ ",
        "         FC = ext <- 'Fractional Contribution',",
        "+ ",
        "         Labeled = ext <- 'Percent Labeled'",
        "+ ",
        "  )",
        "+ ",
        "",
        "+ ",
        "  if(!grepl('/$', folder)) folder <- paste0(folder, '/')",
        "+ ",
        "",
        "+ ",
        "  if (sum(grepl('MID', names(MS_data))) >= 1) {",
        "+ ",
        "    data9 <- MS_data %>%",
        "+ ",
        "      filter(ANOVA <= anova) %>%",
        "+ ",
        "      select(Name, Condition, Iso, contains('MID')) %>%",
        "+ ",
        "      gather(Exp, Value,-Name,-Condition,-Iso) %>%",
        "+ ",
        "      arrange(Name, Condition) %>%",
        "+ ",
        "      unite(Condition_Exp, c(Condition, Exp), sep = '_') %>%",
        "+ ",
        "      mutate(Condition_Exp = factor(Condition_Exp, levels = unique(Condition_Exp))) %>%",
        "+ ",
        "      unite(Name_Iso, c(Name, Iso), sep = '_') %>%",
        "+ ",
        "      spread(Condition_Exp, Value)",
        "+ ",
        "",
        "+ ",
        "    data9 <- data9[!(rowSums(data9[2:length(data9)], na.rm = T) == 0), ]",
        "+ ",
        "",
        "+ ",
        "  } else {",
        "+ ",
        "",
        "+ ",
        "    data9 <- MS_data %>%",
        "+ ",
        "      filter(ANOVA <= anova) %>%",
        "+ ",
        "      select(Name, Condition, grep('Exp|FC|Labeled', names(MS_data))) %>%",
        "+ ",
        "      gather(Exp, Value,-Name,-Condition) %>%",
        "+ ",
        "      arrange(Name, Condition) %>%",
        "+ ",
        "      group_by(Name) %>%",
        "+ ",
        "      mutate(Nr.NA = sum(is.na(Value)),",
        "+ ",
        "             Nr.Samples = n()) %>%",
        "+ ",
        "      filter(Nr.NA < Nr.Samples - 1) %>%",
        "+ ",
        "      ungroup() %>%",
        "+ ",
        "      select(-Nr.NA,-Nr.Samples) %>%",
        "+ ",
        "      unite(Condition_Exp, c(Condition, Exp), sep = '_') %>%",
        "+ ",
        "      mutate(Condition_Exp = factor(Condition_Exp, levels = unique(Condition_Exp))) %>%",
        "+ ",
        "      spread(Condition_Exp, Value)",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "  data9[is.na(data9)] <- 0",
        "+ ",
        "  data5 = as.matrix(data9[2:length(data9)])",
        "+ ",
        "  rownames(data5) <- data9$Name",
        "+ ",
        "  data5 <- data5[!(rowSums(data5)) == 0, ]",
        "+ ",
        "  data5 <- data5[, !(colSums(data5)) == 0]",
        "+ ",
        "",
        "+ ",
        "  # Save matrix data",
        "+ ",
        "  write.csv(data5, file = paste0(Title, '_Heatmap_', ext, '.csv'))",
        "+ ",
        "",
        "+ ",
        "  return(data5)",
        "+ ",
        "}",
        "> ",
        "test <- make_matrix(amounts3)",
        "Error: Can't subset columns that don't exist.\n\u001B[31mx\u001B[39m Location 2 doesn't exist.\n\u001B[34mi\u001B[39m There are only 1 column.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "anova = 0.05",
        "> ",
        "MS_data <- amounts3",
        "> ",
        "    data9 <- MS_data %>%",
        "+ ",
        "      filter(ANOVA <= anova) %>%",
        "+ ",
        "      select(Name, Condition, Iso, contains('MID')) %>%",
        "+ ",
        "      gather(Exp, Value,-Name,-Condition,-Iso) %>%",
        "+ ",
        "      arrange(Name, Condition) %>%",
        "+ ",
        "      unite(Condition_Exp, c(Condition, Exp), sep = '_') %>%",
        "+ ",
        "      mutate(Condition_Exp = factor(Condition_Exp, levels = unique(Condition_Exp))) %>%",
        "+ ",
        "      unite(Name_Iso, c(Name, Iso), sep = '_') %>%",
        "+ ",
        "      spread(Condition_Exp, Value)",
        "Error: Can't subset columns that don't exist.\n\u001B[31mx\u001B[39m Column `Iso` doesn't exist.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "    data9 <- MS_data %>%",
        "+ ",
        "      filter(ANOVA <= anova) %>%",
        "+ ",
        "      select(Name, Condition, grep('Exp|FC|Labeled', names(MS_data))) %>%",
        "+ ",
        "      gather(Exp, Value,-Name,-Condition) %>%",
        "+ ",
        "      arrange(Name, Condition) %>%",
        "+ ",
        "      group_by(Name) %>%",
        "+ ",
        "      mutate(Nr.NA = sum(is.na(Value)),",
        "+ ",
        "             Nr.Samples = n()) %>%",
        "+ ",
        "      filter(Nr.NA < Nr.Samples - 1) %>%",
        "+ ",
        "      ungroup() %>%",
        "+ ",
        "      select(-Nr.NA,-Nr.Samples) %>%",
        "+ ",
        "      unite(Condition_Exp, c(Condition, Exp), sep = '_') %>%",
        "+ ",
        "      mutate(Condition_Exp = factor(Condition_Exp, levels = unique(Condition_Exp))) %>%",
        "+ ",
        "      spread(Condition_Exp, Value)",
        "> ",
        "head(data9)",
        "\u001B[38;5;246m# A tibble: 0 x 1\u001B[39m\n\u001B[38;5;246m# ... with 1 variable: Name \u001B[3m\u001B[38;5;246m<chr>\u001B[38;5;246m\u001B[23m\u001B[39m\n",
        "> ",
        "MS_data %>%",
        "+ ",
        "      filter(ANOVA <= anova)",
        "\u001B[38;5;246m# A tibble: 0 x 11\u001B[39m\n\u001B[38;5;246m# ... with 11 variables: Name \u001B[3m\u001B[38;5;246m<chr>\u001B[38;5;246m\u001B[23m, KEGG.ID \u001B[3m\u001B[38;5;246m<chr>\u001B[38;5;246m\u001B[23m, Condition \u001B[3m\u001B[38;5;246m<fct>\u001B[38;5;246m\u001B[23m, Av \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m, Std \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m, CV \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m,\u001B[39m\n\u001B[38;5;246m#   Exp1 \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m, Exp2 \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m, Exp3 \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m, ANOVA \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m, Sig \u001B[3m\u001B[38;5;246m<chr>\u001B[38;5;246m\u001B[23m\u001B[39m",
        "\n",
        "> ",
        "head(MS_data)",
        "\u001B[38;5;246m# A tibble: 6 x 11\u001B[39m\n  Name  KEGG.ID Condition           Av      Std     CV      Exp1      Exp2       Exp3 ANOVA Sig  \n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m      \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m 2-HG  C02630  Basal cell   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m2\u001B[24m\u001B[4m2\u001B[24m\u001B[4m5\u001B[24m\u001B[39m 0.000\u001B[4m5\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m -\u001B[31m2\u001B[39m\u001B[31m.\u001B[39m\u001B[31m24\u001B[39m   0.000\u001B[4m1\u001B[24m\u001B[4m6\u001B[24m\u001B[4m3\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m7\u001B[24m\u001B[4m9\u001B[24m\u001B[4m4\u001B[24m\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[4m0\u001B[24m\u001B[39m\u001B[31m\u001B[4m4\u001B[24m\u001B[4m4\u001B[24m4\u001B[39m 0.237 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m2\u001B[39m 2-HG  C02630  Luminal cell -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m8\u001B[24m\u001B[4m2\u001B[24m\u001B[4m9\u001B[24m\u001B[39m 0.000\u001B[4m5\u001B[24m\u001B[4m5\u001B[24m\u001B[4m9\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m674\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m9\u001B[24m\u001B[4m8\u001B[24m\u001B[4m6\u001B[24m\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m2\u001B[24m\u001B[4m9\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m2\u001B[24m\u001B[4m0\u001B[24m\u001B[4m8\u001B[24m\u001B[39m  0.237 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m3\u001B[39m Ala   C00041  Basal cell    0.001\u001B[4m6\u001B[24m\u001B[4m6\u001B[24m  0.006\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m   3.64   0.008\u001B[4m1\u001B[24m\u001B[4m8\u001B[24m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m3\u001B[4m7\u001B[24m\u001B[4m2\u001B[24m\u001B[39m   0.000\u001B[4m5\u001B[24m\u001B[4m1\u001B[24m\u001B[4m7\u001B[24m  0.335 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m4\u001B[39m Ala   C00041  Luminal cell -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m2\u001B[4m3\u001B[24m\u001B[4m2\u001B[24m\u001B[39m  0.001\u001B[4m8\u001B[24m\u001B[4m2\u001B[24m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m783\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m8\u001B[24m\u001B[4m1\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m4\u001B[4m3\u001B[24m\u001B[4m4\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m8\u001B[24m\u001B[4m1\u001B[24m\u001B[4m8\u001B[24m\u001B[39m  0.335 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m5\u001B[39m Asn   C00152  Basal cell   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m4\u001B[24m\u001B[4m5\u001B[24m\u001B[39m  0.001\u001B[4m6\u001B[24m\u001B[4m0\u001B[24m  -\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m\u001B[31m11\u001B[39m   0.000\u001B[4m1\u001B[24m\u001B[4m6\u001B[24m\u001B[4m4\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m3\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m4\u001B[24m\u001B[4m7\u001B[24m\u001B[39m   0.521 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m6\u001B[39m Asn   C00152  Luminal cell -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m6\u001B[24m\u001B[4m9\u001B[24m\u001B[4m5\u001B[24m\u001B[39m 0.000\u001B[4m9\u001B[24m\u001B[4m3\u001B[24m\u001B[4m3\u001B[24m -\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m\u001B[31m34\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m6\u001B[24m\u001B[4m4\u001B[24m\u001B[39m   0.000\u001B[4m2\u001B[24m\u001B[4m2\u001B[24m\u001B[4m4\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m6\u001B[24m\u001B[4m6\u001B[24m\u001B[4m8\u001B[24m\u001B[39m  0.521 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   ",
        "\n",
        "> ",
        "anova=1",
        "> ",
        "MS_data %>%",
        "+ ",
        "      filter(ANOVA <= anova)",
        "\u001B[38;5;246m# A tibble: 36 x 11\u001B[39m\n   Name    KEGG.ID Condition           Av      Std     CV      Exp1      Exp2       Exp3 ANOVA Sig  \n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m      \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m 2-HG    C02630  Basal cell   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m2\u001B[24m\u001B[4m2\u001B[24m\u001B[4m5\u001B[24m\u001B[39m 0.000\u001B[4m5\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m -\u001B[31m2\u001B[39m\u001B[31m.\u001B[39m\u001B[31m24\u001B[39m   0.000\u001B[4m1\u001B[24m\u001B[4m6\u001B[24m\u001B[4m3\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m7\u001B[24m\u001B[4m9\u001B[24m\u001B[4m4\u001B[24m\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[4m0\u001B[24m\u001B[39m\u001B[31m\u001B[4m4\u001B[24m\u001B[4m4\u001B[24m4\u001B[39m 0.237 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m 2\u001B[39m 2-HG    C02630  Luminal cell -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m8\u001B[24m\u001B[4m2\u001B[24m\u001B[4m9\u001B[24m\u001B[39m 0.000\u001B[4m5\u001B[24m\u001B[4m5\u001B[24m\u001B[4m9\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m674\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m9\u001B[24m\u001B[4m8\u001B[24m\u001B[4m6\u001B[24m\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m2\u001B[24m\u001B[4m9\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m2\u001B[24m\u001B[4m0\u001B[24m\u001B[4m8\u001B[24m\u001B[39m  0.237 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m 3\u001B[39m Ala     C00041  Basal cell    0.001\u001B[4m6\u001B[24m\u001B[4m6\u001B[24m  0.006\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m   3.64   0.008\u001B[4m1\u001B[24m\u001B[4m8\u001B[24m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m3\u001B[4m7\u001B[24m\u001B[4m2\u001B[24m\u001B[39m   0.000\u001B[4m5\u001B[24m\u001B[4m1\u001B[24m\u001B[4m7\u001B[24m  0.335 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m 4\u001B[39m Ala     C00041  Luminal cell -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m2\u001B[4m3\u001B[24m\u001B[4m2\u001B[24m\u001B[39m  0.001\u001B[4m8\u001B[24m\u001B[4m2\u001B[24m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m783\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m8\u001B[24m\u001B[4m1\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m4\u001B[4m3\u001B[24m\u001B[4m4\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m8\u001B[24m\u001B[4m1\u001B[24m\u001B[4m8\u001B[24m\u001B[39m  0.335 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m 5\u001B[39m Asn     C00152  Basal cell   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m4\u001B[24m\u001B[4m5\u001B[24m\u001B[39m  0.001\u001B[4m6\u001B[24m\u001B[4m0\u001B[24m  -\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m\u001B[31m11\u001B[39m   0.000\u001B[4m1\u001B[24m\u001B[4m6\u001B[24m\u001B[4m4\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m3\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m4\u001B[24m\u001B[4m7\u001B[24m\u001B[39m   0.521 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m 6\u001B[39m Asn     C00152  Luminal cell -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m6\u001B[24m\u001B[4m9\u001B[24m\u001B[4m5\u001B[24m\u001B[39m 0.000\u001B[4m9\u001B[24m\u001B[4m3\u001B[24m\u001B[4m3\u001B[24m -\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m\u001B[31m34\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m1\u001B[4m6\u001B[24m\u001B[4m4\u001B[24m\u001B[39m   0.000\u001B[4m2\u001B[24m\u001B[4m2\u001B[24m\u001B[4m4\u001B[24m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m6\u001B[24m\u001B[4m6\u001B[24m\u001B[4m8\u001B[24m\u001B[39m  0.521 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m 7\u001B[39m Asp     C00049  Basal cell   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m2\u001B[4m2\u001B[24m\u001B[4m7\u001B[24m\u001B[39m  0.001\u001B[4m5\u001B[24m\u001B[4m9\u001B[24m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m700\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m8\u001B[24m\u001B[4m2\u001B[24m\u001B[4m5\u001B[24m\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m3\u001B[4m9\u001B[24m\u001B[4m7\u001B[24m\u001B[39m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m2\u001B[4m0\u001B[24m\u001B[4m2\u001B[24m\u001B[39m   0.320 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m 8\u001B[39m Asp     C00049  Luminal cell  0.000\u001B[4m4\u001B[24m\u001B[4m6\u001B[24m\u001B[4m5\u001B[24m 0.003\u001B[4m8\u001B[24m\u001B[4m6\u001B[24m   8.30  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m2\u001B[4m9\u001B[24m\u001B[4m6\u001B[24m\u001B[39m   0.004\u001B[4m6\u001B[24m\u001B[4m4\u001B[24m  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m000\u001B[39m\u001B[31m\u001B[4m2\u001B[24m\u001B[4m8\u001B[24m\u001B[4m6\u001B[24m\u001B[39m  0.320 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m 9\u001B[39m Choline C00114  Basal cell   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m52\u001B[4m3\u001B[24m\u001B[39m   0.041\u001B[4m3\u001B[24m   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m789\u001B[39m -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m18\u001B[4m2\u001B[24m\u001B[39m   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m98\u001B[4m2\u001B[24m\u001B[39m   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m40\u001B[4m5\u001B[24m\u001B[39m    0.145 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;250m10\u001B[39m Choline C00114  Luminal cell  0.006\u001B[4m6\u001B[24m\u001B[4m9\u001B[24m  0.038\u001B[4m7\u001B[24m    5.78  -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m25\u001B[4m6\u001B[24m\u001B[39m    0.049\u001B[4m5\u001B[24m   -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m00\u001B[39m\u001B[31m3\u001B[4m8\u001B[24m\u001B[4m3\u001B[24m\u001B[39m   0.145 \u001B[38;5;246m\"\u001B[39m\u001B[38;5;246m\"\u001B[39m   \n\u001B[38;5;246m# ... with 26 more rows\u001B[39m",
        "\n",
        "> ",
        "    data9 <- MS_data %>%",
        "+ ",
        "      filter(ANOVA <= anova) %>%",
        "+ ",
        "      select(Name, Condition, grep('Exp|FC|Labeled', names(MS_data))) %>%",
        "+ ",
        "      gather(Exp, Value,-Name,-Condition) %>%",
        "+ ",
        "      arrange(Name, Condition) %>%",
        "+ ",
        "      group_by(Name) %>%",
        "+ ",
        "      mutate(Nr.NA = sum(is.na(Value)),",
        "+ ",
        "             Nr.Samples = n()) %>%",
        "+ ",
        "      filter(Nr.NA < Nr.Samples - 1) %>%",
        "+ ",
        "      ungroup() %>%",
        "+ ",
        "      select(-Nr.NA,-Nr.Samples) %>%",
        "+ ",
        "      unite(Condition_Exp, c(Condition, Exp), sep = '_') %>%",
        "+ ",
        "      mutate(Condition_Exp = factor(Condition_Exp, levels = unique(Condition_Exp))) %>%",
        "+ ",
        "      spread(Condition_Exp, Value)",
        "> ",
        "amounts3$ANOVA <= anova",
        "   2-HG    2-HG     Ala     Ala     Asn     Asn     Asp     Asp Choline Choline     Cys     Cys \n   TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE \n    Glc     Glc     Gln     Gln     Glu     Glu     Gly     Gly     Lac     Lac Leu/Ile Leu/Ile \n   TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE \n    Pro     Pro  Pro-OH  Pro-OH     Ser     Ser     Thr     Thr     Trp     Trp     Val     Val \n   TRUE    TRUE    TRUE    TRUE ",
        "   TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE    TRUE \n",
        "> ",
        "sum(amounts3$ANOVA <= anova)",
        "[1] 36\n",
        "> ",
        "anova = 0.05",
        "> ",
        "sum(amounts3$ANOVA <= anova)",
        "[1] 0\n",
        "> ",
        "anova = 1",
        "> ",
        "test <- make_matrix(amounts3, anova = 1)",
        "> ",
        "test",
        "        Basal cell_Exp1 Basal cell_Exp2 Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2\n2-HG       0.0001634454   -0.0007938781   -4.441769e-05     -9.858479e-04     -0.0012920467\nAla        0.0081847579   -0.0037220788    5.173355e-04     -1.806575e-03     -0.0043418043\nAsn        0.0001639886   -0.0030455944   -1.466867e-03     -1.641761e-03      0.0002237096\nAsp       -0.0008254734   -0.0039729614   -2.015666e-03     -2.963336e-03      0.0046439145\nCholine   -0.0182401301   -0.0982080998   -4.054636e-02",
        "     -2.561731e-02      0.0495242961\nCys       -0.0006593749   -0.0073995241   -4.471984e-03     -5.348386e-03      0.0038244464\nGlc       -0.0355011651   -0.1724783898   -8.223000e-02     -1.284807e-01     -0.1055033655\nGln        0.0013986384   -0.0011242367   -4.141476e-04     -5.227037e-04     -0.0078190546\nGlu       -0.0001517851   -0.0069578723   -3.682731e-03     -4.612296e-03      0.0057717288\nGly        0.0014133136   -0.0007779965    1.043247e-04      1.979448e-05     -0.0055781679\nLac       -0.0025234042",
        "   -0.0217085574   -1.191197e-02     -1.444087e-02      0.0002266580\nLeu/Ile    0.6847688995   -0.3826033774   -2.137824e-01     -2.752012e-01     -0.3858774086\nPro        0.1501541717   -0.0805646769   -4.366765e-02     -4.864556e-02     -0.0832382456\nPro-OH     0.0561349213   -0.0296258477   -1.119451e-02     -2.600800e-02     -0.0273553976\nSer        0.0001745916   -0.0004357182   -3.548303e-05     -4.589429e-05     -0.0006621367\nThr        0.0035729299   -0.0008684996   -8.765168e-04     -1.277150e-03     -0.0162940011",
        "\nTrp        0.0151201354   -0.0176904614   -1.126585e-02     -1.066211e-02     -0.0195769345\nVal        0.2477775415   -0.0767791338   -4.554545e-02     -5.271095e-02     -0.0997138469\n        Luminal cell_Exp3\n2-HG        -0.0002081477\nAla         -0.0008180073\nAsn         -0.0006682874\nAsp         -0.0002856698\nCholine     -0.0038349233\nCys         -0.0012146238\nGlc         -0.0177015655\nGln          0.0002058861\nGlu         -0.0001872597\nGly         -0.0002963205\nLac         -0.0010667311\nLeu/Ile     -0.0226846834",
        "\nPro         -0.0179561263\nPro-OH      -0.0065049185\nSer          0.0002581055\nThr         -0.0010836524\nTrp         -0.0002967077\nVal         -0.0144500614\n",
        "> ",
        "head(test)",
        "        Basal cell_Exp1 Basal cell_Exp2 Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2\n2-HG       0.0001634454   -0.0007938781   -4.441769e-05     -0.0009858479     -0.0012920467\nAla        0.0081847579   -0.0037220788    5.173355e-04     -0.0018065746     -0.0043418043\nAsn        0.0001639886   -0.0030455944   -1.466867e-03     -0.0016417605      0.0002237096\nAsp       -0.0008254734   -0.0039729614   -2.015666e-03     -0.0029633357      0.0046439145\nCholine   -0.0182401301   -0.0982080998   -4.054636e-02",
        "     -0.0256173124      0.0495242961\nCys       -0.0006593749   -0.0073995241   -4.471984e-03     -0.0053483859      0.0038244464\n        Luminal cell_Exp3\n2-HG        -0.0002081477\nAla         -0.0008180073\nAsn         -0.0006682874\nAsp         -0.0002856698\nCholine     -0.0038349233\nCys         -0.0012146238\n",
        "> ",
        "make_pheatmap <- function(matrix, samples = info, heat.color = c('navy','grey90','firebrick3'),",
        "+ ",
        "                          Norv, Title, folder = getwd()){",
        "+ ",
        "",
        "+ ",
        "  # Find out what kind of input matrix is, ie relative amounts, MIDs etc",
        "+ ",
        "",
        "+ ",
        "  type <- str_remove(colnames(matrix), '^(.)*_') %>%",
        "+ ",
        "    str_remove('( )?[0-9]+$') %>%",
        "+ ",
        "    unique()",
        "+ ",
        "",
        "+ ",
        "  switch(type,",
        "+ ",
        "         Exp = ext <- 'Relative Amounts',",
        "+ ",
        "         MID = ext <- 'MIDs',",
        "+ ",
        "         FC = ext <- 'Fractional Contribution',",
        "+ ",
        "         Labeled = ext <- 'Percent Labeled'",
        "+ ",
        "         )",
        "+ ",
        "",
        "+ ",
        "  # Make sure the folder has a \"/\" at the end",
        "+ ",
        "  if(!grepl('/$', folder)) folder <- paste0(folder, '/')",
        "+ ",
        "",
        "+ ",
        "  #if (exists('samples')==F) samples <- info   # Important for heatmap annotation",
        "+ ",
        "  ann <- select(samples, Condition, Cell.Number) %>%",
        "+ ",
        "    as.data.frame()",
        "+ ",
        "  rownames(ann) <- colnames(matrix)",
        "+ ",
        "",
        "+ ",
        "  ann_colors = list(    # This names list defines the colors for sample groups",
        "+ ",
        "    Condition = colors[1:length(unique(gsub('_(.)*','',colnames(matrix))))],",
        "+ ",
        "    Norvaline = c(\"white\", \"blue\"),",
        "+ ",
        "    Cell.Number = c(\"white\", \"green\")",
        "+ ",
        "  )",
        "+ ",
        "",
        "+ ",
        "  if (exists('Norv')==T) {    # Show normalization value in each sample if set",
        "+ ",
        "    ann$Norvaline <- Norv     # This could become an anker for Shiny",
        "+ ",
        "  } else {",
        "+ ",
        "    ann_colors$Norvaline <- NULL  # Don't show norvaline trace",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "  names(ann_colors[['Condition']]) <- unique(gsub('_(.)*','',colnames(matrix)))",
        "+ ",
        "",
        "+ ",
        "  matrix[is.na(matrix)] <- 0",
        "+ ",
        "  heatmap.title = paste0(folder, Title, '_Heatmap_',ext,'.pdf', sep='')",
        "+ ",
        "  pheatmap::pheatmap(matrix, cluster_row = T, cluster_col = T,",
        "+ ",
        "                     clustering_distance_rows = 'correlation',",
        "+ ",
        "                     clustering_distance_cols = 'correlation',",
        "+ ",
        "                     color = colorRampPalette(heat.color)(100),",
        "+ ",
        "                     border_color = \"black\", scale = \"row\",",
        "+ ",
        "                     cellwidth = 20, cellheight = 10,",
        "+ ",
        "                     annotation = ann, annotation_colors = ann_colors,",
        "+ ",
        "                     show_colnames = F, main = paste(Title,ext,sep = '-'),",
        "+ ",
        "                     filename = heatmap.title)",
        "+ ",
        "}",
        "> ",
        "make_heatmap(test)",
        "Error in make_heatmap(test) : could not find function \"make_heatmap\"\n",
        "> ",
        "make_pheatmap(test)",
        "Error in `.rowNamesDF<-`(x, value = value) : invalid 'row.names' length\n",
        "> ",
        "head(test)",
        "        Basal cell_Exp1 Basal cell_Exp2 Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2\n2-HG       0.0001634454   -0.0007938781   -4.441769e-05     -0.0009858479     -0.0012920467\nAla        0.0081847579   -0.0037220788    5.173355e-04     -0.0018065746     -0.0043418043\nAsn        0.0001639886   -0.0030455944   -1.466867e-03     -0.0016417605      0.0002237096\nAsp       -0.0008254734   -0.0039729614   -2.015666e-03     -0.0029633357      0.0046439145\nCholine   -0.0182401301   -0.0982080998   -4.054636e-02",
        "     -0.0256173124      0.0495242961\nCys       -0.0006593749   -0.0073995241   -4.471984e-03     -0.0053483859      0.0038244464\n        Luminal cell_Exp3\n2-HG        -0.0002081477\nAla         -0.0008180073\nAsn         -0.0006682874\nAsp         -0.0002856698\nCholine     -0.0038349233\nCys         -0.0012146238\n",
        "> ",
        "matrix <- test",
        "> ",
        "samples = info",
        "> ",
        "heat.color = c('navy','grey90','firebrick3')",
        "> ",
        "head(amounts)",
        "  Name KEGG.ID    Condition          Av          Std         CV        Exp1        Exp2        Exp3\n1 2-HG  C02630   Basal cell 0.007329562 0.0005035484 0.06870103 0.007717957 0.006760634 0.007510094\n2 2-HG  C02630 Luminal cell 0.006725831 0.0005587802 0.08307973 0.006568664 0.006262465 0.007346364\n3 2-HG  C02630      Control 0.007554512 0.0006571198 0.08698375 0.008122479 0.007706265 0.006834792\n4  Ala  C00041   Basal cell 0.053731340 0.0060351024 0.11231997 0.060256093 0.048349256 0.052588671\n5  Ala  C00041",
        " Luminal cell 0.049749206 0.0018175900 0.03653505 0.050264761 0.047729531 0.051253328\n6  Ala  C00041      Control 0.052071335 0.0032160730 0.06176283 0.055542341 0.051479167 0.049192498\n      ANOVA Sig\n1 0.2673837    \n2 0.2673837    \n3 0.2673837    \n4 0.5248415    \n5 0.5248415    \n6 0.5248415    \n",
        "> ",
        "unique(amounts$Name)",
        " [1] \"2-HG\"    \"Ala\"     \"Asn\"     \"Asp\"     \"Choline\" \"Cys\"     \"Glc\"     \"Gln\"     \"Glu\"    \n[10] \"Gly\"     \"Lac\"     \"Leu/Ile\" \"Pro\"     \"Pro-OH\"  \"Ser\"     \"Thr\"     \"Trp\"     \"Val\"    \n",
        "> ",
        "head(test)",
        "        Basal cell_Exp1 Basal cell_Exp2 Basal cell_Exp3 Luminal cell_Exp1 Luminal cell_Exp2\n2-HG       0.0001634454   -0.0007938781   -4.441769e-05     -0.0009858479     -0.0012920467\nAla        0.0081847579   -0.0037220788    5.173355e-04     -0.0018065746     -0.0043418043\nAsn        0.0001639886   -0.0030455944   -1.466867e-03     -0.0016417605      0.0002237096\nAsp       -0.0008254734   -0.0039729614   -2.015666e-03     -0.0029633357      0.0046439145\nCholine   -0.0182401301   -0.0982080998   -4.054636e-02",
        "     -0.0256173124      0.0495242961\nCys       -0.0006593749   -0.0073995241   -4.471984e-03     -0.0053483859      0.0038244464\n        Luminal cell_Exp3\n2-HG        -0.0002081477\nAla         -0.0008180073\nAsn         -0.0006682874\nAsp         -0.0002856698\nCholine     -0.0038349233\nCys         -0.0012146238\n",
        "> ",
        "dim(test)",
        "[1] 18  6\n",
        "> ",
        "ncol(test)",
        "[1] 6\n",
        "> ",
        "make_pheatmap <- function(matrix, samples = info, heat.color = c('navy','grey90','firebrick3'),",
        "+ ",
        "                          Norv = 1, Title, folder = getwd()){",
        "+ ",
        "",
        "+ ",
        "  # Make normalizing metabolite = 1 if none is presented",
        "+ ",
        "  if(length(Norv) == 1) Norv = rep(1, ncol(matrix))",
        "+ ",
        "  ",
        "+ ",
        "  # Find out what kind of input matrix is, ie relative amounts, MIDs etc",
        "+ ",
        "  type <- str_remove(colnames(matrix), '^(.)*_') %>%",
        "+ ",
        "    str_remove('( )?[0-9]+$') %>%",
        "+ ",
        "    unique()",
        "+ ",
        "",
        "+ ",
        "  switch(type,",
        "+ ",
        "         Exp = ext <- 'Relative Amounts',",
        "+ ",
        "         MID = ext <- 'MIDs',",
        "+ ",
        "         FC = ext <- 'Fractional Contribution',",
        "+ ",
        "         Labeled = ext <- 'Percent Labeled'",
        "+ ",
        "         )",
        "+ ",
        "",
        "+ ",
        "  # Make sure the folder has a \"/\" at the end",
        "+ ",
        "  if(!grepl('/$', folder)) folder <- paste0(folder, '/')",
        "+ ",
        "",
        "+ ",
        "  #if (exists('samples')==F) samples <- info   # Important for heatmap annotation",
        "+ ",
        "  ann <- select(samples, Condition, Cell.Number) %>%",
        "+ ",
        "    as.data.frame()",
        "+ ",
        "  rownames(ann) <- colnames(matrix)",
        "+ ",
        "",
        "+ ",
        "  ann_colors = list(    # This names list defines the colors for sample groups",
        "+ ",
        "    Condition = colors[1:length(unique(gsub('_(.)*','',colnames(matrix))))],",
        "+ ",
        "    Norvaline = c(\"white\", \"blue\"),",
        "+ ",
        "    Cell.Number = c(\"white\", \"green\")",
        "+ ",
        "  )",
        "+ ",
        "",
        "+ ",
        "  if (exists('Norv')==T) {    # Show normalization value in each sample if set",
        "+ ",
        "    ann$Norvaline <- Norv     # This could become an anker for Shiny",
        "+ ",
        "  } else {",
        "+ ",
        "    ann_colors$Norvaline <- NULL  # Don't show norvaline trace",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "  names(ann_colors[['Condition']]) <- unique(gsub('_(.)*','',colnames(matrix)))",
        "+ ",
        "",
        "+ ",
        "  matrix[is.na(matrix)] <- 0",
        "+ ",
        "  heatmap.title = paste0(folder, Title, '_Heatmap_',ext,'.pdf', sep='')",
        "+ ",
        "  pheatmap::pheatmap(matrix, cluster_row = T, cluster_col = T,",
        "+ ",
        "                     clustering_distance_rows = 'correlation',",
        "+ ",
        "                     clustering_distance_cols = 'correlation',",
        "+ ",
        "                     color = colorRampPalette(heat.color)(100),",
        "+ ",
        "                     border_color = \"black\", scale = \"row\",",
        "+ ",
        "                     cellwidth = 20, cellheight = 10,",
        "+ ",
        "                     annotation = ann, annotation_colors = ann_colors,",
        "+ ",
        "                     show_colnames = F, main = paste(Title,ext,sep = '-'),",
        "+ ",
        "                     filename = heatmap.title)",
        "+ ",
        "}",
        "> ",
        "make_pheatmap(test)",
        "Error in `.rowNamesDF<-`(x, value = value) : invalid 'row.names' length\n",
        "> ",
        "Norv = 1",
        "> ",
        "  # Make normalizing metabolite = 1 if none is presented",
        "> ",
        "  if(length(Norv) == 1) Norv = rep(1, ncol(matrix))",
        "> ",
        "Norv",
        "[1] 1 1 1 1 1 1\n",
        "> ",
        "  # Find out what kind of input matrix is, ie relative amounts, MIDs etc",
        "> ",
        "  type <- str_remove(colnames(matrix), '^(.)*_') %>%",
        "+ ",
        "    str_remove('( )?[0-9]+$') %>%",
        "+ ",
        "    unique()",
        "> ",
        "  switch(type,",
        "+ ",
        "         Exp = ext <- 'Relative Amounts',",
        "+ ",
        "         MID = ext <- 'MIDs',",
        "+ ",
        "         FC = ext <- 'Fractional Contribution',",
        "+ ",
        "         Labeled = ext <- 'Percent Labeled'",
        "+ ",
        "         )",
        "> ",
        "  #if (exists('samples')==F) samples <- info   # Important for heatmap annotation",
        "> ",
        "  ann <- select(samples, Condition, Cell.Number) %>%",
        "+ ",
        "    as.data.frame()",
        "> ",
        "  rownames(ann) <- colnames(matrix)",
        "Error in `.rowNamesDF<-`(x, value = value) : invalid 'row.names' length\n",
        "> ",
        "ann",
        "     Condition Cell.Number\n1   Basal cell           1\n2   Basal cell           1\n3   Basal cell           1\n4 Luminal cell           1\n5 Luminal cell           1\n6 Luminal cell           1\n7      Control           1\n8      Control           1\n9      Control           1\n",
        "> ",
        "colnames(matrix)",
        "[1] \"Basal cell_Exp1\"   \"Basal cell_Exp2\"   \"Basal cell_Exp3\"   \"Luminal cell_Exp1\" \"Luminal cell_Exp2\"\n[6] \"Luminal cell_Exp3\"\n",
        "> ",
        "class(ann)",
        "[1] \"data.frame\"\n",
        "> ",
        "  rownames(ann) <- colnames(matrix)",
        "Error in `.rowNamesDF<-`(x, value = value) : invalid 'row.names' length\n",
        "> ",
        "make_pheatmap(test, samples = info[1:6,])",
        "Error in colors[1:length(unique(gsub(\"_(.)*\", \"\", colnames(matrix))))] : \n  object of type 'closure' is not subsettable\n",
        "> ",
        "colors",
        "function (distinct = FALSE) \n{\n    c <- .Call(C_colors)\n    if (distinct) \n        c[!duplicated(t(col2rgb(c)))]\n    else c\n}\n<bytecode: 0x0000026394b4a0f0>\n<environment: namespace:grDevices>\n",
        "> ",
        "library(ShinyMetab)",
        "\nAttaching package: ‘ShinyMetab’\n\n",
        "The following objects are masked _by_ ‘.GlobalEnv’:\n\n    make_matrix, make_pheatmap\n\n",
        "> ",
        "make_pheatmap <- function(matrix, samples = info, heat.color = c('navy','grey90','firebrick3'),",
        "+ ",
        "                          Norv = 1, Title, folder = getwd()){",
        "+ ",
        "",
        "+ ",
        "  # Make normalizing metabolite = 1 if none is presented",
        "+ ",
        "  if(length(Norv) == 1) Norv = rep(1, ncol(matrix))",
        "+ ",
        "",
        "+ ",
        "  # Find out what kind of input matrix is, ie relative amounts, MIDs etc",
        "+ ",
        "  type <- str_remove(colnames(matrix), '^(.)*_') %>%",
        "+ ",
        "    str_remove('( )?[0-9]+$') %>%",
        "+ ",
        "    unique()",
        "+ ",
        "",
        "+ ",
        "  switch(type,",
        "+ ",
        "         Exp = ext <- 'Relative Amounts',",
        "+ ",
        "         MID = ext <- 'MIDs',",
        "+ ",
        "         FC = ext <- 'Fractional Contribution',",
        "+ ",
        "         Labeled = ext <- 'Percent Labeled'",
        "+ ",
        "         )",
        "+ ",
        "",
        "+ ",
        "  # Make sure the folder has a \"/\" at the end",
        "+ ",
        "  if(!grepl('/$', folder)) folder <- paste0(folder, '/')",
        "+ ",
        "",
        "+ ",
        "  #if (exists('samples')==F) samples <- info   # Important for heatmap annotation",
        "+ ",
        "  ann <- select(samples, Condition, Cell.Number) %>%",
        "+ ",
        "    as.data.frame()",
        "+ ",
        "  rownames(ann) <- colnames(matrix)",
        "+ ",
        "",
        "+ ",
        "  ann_colors = list(    # This names list defines the colors for sample groups",
        "+ ",
        "    Condition = colors[1:length(unique(gsub('_(.)*','',colnames(matrix))))],",
        "+ ",
        "    Norvaline = c(\"white\", \"blue\"),",
        "+ ",
        "    Cell.Number = c(\"white\", \"green\")",
        "+ ",
        "  )",
        "+ ",
        "",
        "+ ",
        "  if (exists('Norv')==T) {    # Show normalization value in each sample if set",
        "+ ",
        "    ann$Norvaline <- Norv     # This could become an anker for Shiny",
        "+ ",
        "  } else {",
        "+ ",
        "    ann_colors$Norvaline <- NULL  # Don't show norvaline trace",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "  names(ann_colors[['Condition']]) <- unique(gsub('_(.)*','',colnames(matrix)))",
        "+ ",
        "",
        "+ ",
        "  matrix[is.na(matrix)] <- 0",
        "+ ",
        "  heatmap.title = paste0(folder, Title, '_Heatmap_',ext,'.pdf', sep='')",
        "+ ",
        "  pheatmap::pheatmap(matrix, cluster_row = T, cluster_col = T,",
        "+ ",
        "                     clustering_distance_rows = 'correlation',",
        "+ ",
        "                     clustering_distance_cols = 'correlation',",
        "+ ",
        "                     color = colorRampPalette(heat.color)(100),",
        "+ ",
        "                     border_color = \"black\", scale = \"row\",",
        "+ ",
        "                     cellwidth = 20, cellheight = 10,",
        "+ ",
        "                     annotation = ann, annotation_colors = ann_colors,",
        "+ ",
        "                     show_colnames = F, main = paste(Title,ext,sep = '-'),",
        "+ ",
        "                     filename = heatmap.title)",
        "+ ",
        "}",
        "> ",
        "make_pheatmap(test, samples = info[1:6,])",
        "Error in colors[1:length(unique(gsub(\"_(.)*\", \"\", colnames(matrix))))] : \n  object of type 'closure' is not subsettable\n",
        "> ",
        "samples <- info[1:6,]",
        "> ",
        "  #if (exists('samples')==F) samples <- info   # Important for heatmap annotation",
        "> ",
        "  ann <- select(samples, Condition, Cell.Number) %>%",
        "+ ",
        "    as.data.frame()",
        "> ",
        "  rownames(ann) <- colnames(matrix)",
        "> ",
        "  ann_colors = list(    # This names list defines the colors for sample groups",
        "+ ",
        "    Condition = colors[1:length(unique(gsub('_(.)*','',colnames(matrix))))],",
        "+ ",
        "    Norvaline = c(\"white\", \"blue\"),",
        "+ ",
        "    Cell.Number = c(\"white\", \"green\")",
        "+ ",
        "  )",
        "Error in colors[1:length(unique(gsub(\"_(.)*\", \"\", colnames(matrix))))] : \n  object of type 'closure' is not subsettable\n",
        "> ",
        "colnames(matrix)",
        "[1] \"Basal cell_Exp1\"   \"Basal cell_Exp2\"   \"Basal cell_Exp3\"   \"Luminal cell_Exp1\" \"Luminal cell_Exp2\"\n[6] \"Luminal cell_Exp3\"\n",
        "> ",
        "gsub('_(.)*','', colnames(matrix))",
        "[1] \"Basal cell\"   \"Basal cell\"   \"Basal cell\"   \"Luminal cell\" \"Luminal cell\" \"Luminal cell\"\n",
        "> ",
        "unique(gsub('_(.)*','', colnames(matrix)))",
        "[1] \"Basal cell\"   \"Luminal cell\"\n",
        "> ",
        "1:length(unique(gsub('_(.)*','', colnames(matrix))))",
        "[1] 1 2\n",
        "> ",
        "colors[1:length(unique(gsub('_(.)*','', colnames(matrix))))]",
        "Error in colors[1:length(unique(gsub(\"_(.)*\", \"\", colnames(matrix))))] : \n  object of type 'closure' is not subsettable\n",
        "> ",
        "colors",
        "function (distinct = FALSE) \n{\n    c <- .Call(C_colors)\n    if (distinct) \n        c[!duplicated(t(col2rgb(c)))]\n    else c\n}\n<bytecode: 0x0000026394b4a0f0>\n<environment: namespace:grDevices>\n\nRestarting R session...\n\n"
    ]
}